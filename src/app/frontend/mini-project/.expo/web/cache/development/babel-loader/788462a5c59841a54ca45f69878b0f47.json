{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\mdl\\\\IndeterminateProgress.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getTheme } from \"../theme\";\nimport { defaultSimpleProps } from \"./progress_common\";\n\nvar IndeterminateProgress = function (_Component) {\n  _inherits(IndeterminateProgress, _Component);\n\n  var _super = _createSuper(IndeterminateProgress);\n\n  function IndeterminateProgress(props) {\n    var _this;\n\n    _classCallCheck(this, IndeterminateProgress);\n\n    _this = _super.call(this, props);\n    _this.theme = getTheme();\n    _this._totalLength = 0;\n    _this._height = new Animated.Value(0);\n\n    _this._onLayout = function (_ref) {\n      var _ref$nativeEvent$layo = _ref.nativeEvent.layout,\n          width = _ref$nativeEvent$layo.width,\n          height = _ref$nativeEvent$layo.height;\n\n      if (width > 0 && _this._totalLength !== width) {\n        _this._totalLength = width;\n\n        _this._height.setValue(height);\n\n        _this._aniUpdateProgress();\n      }\n    };\n\n    _this._aniUpdateProgress = function () {\n      if (!(_this._totalLength > 0)) {\n        return;\n      }\n\n      _this._animatedBlock1.left.setValue(0);\n\n      _this._animatedBlock1.right.setValue(_this._totalLength);\n\n      Animated.sequence([Animated.parallel([Animated.timing(_this._animatedBlock1.left, {\n        toValue: _this._totalLength * 0.25,\n        duration: _this.props.progressAniDuration || 1250\n      }), Animated.timing(_this._animatedBlock1.right, {\n        toValue: 0,\n        duration: _this.props.progressAniDuration || 1250\n      })]), Animated.parallel([Animated.timing(_this._animatedBlock1.left, {\n        toValue: _this._totalLength,\n        duration: _this.props.progressAniDuration || 500,\n        easing: Easing.out(Easing.quad)\n      }), _this._getBlock2Ani()])]).start(function (_ref2) {\n        var finished = _ref2.finished;\n        return finished && setImmediate(_this._aniUpdateProgress);\n      });\n    };\n\n    _this._animatedBlock1 = {\n      left: new Animated.Value(0),\n      right: new Animated.Value(0)\n    };\n    _this._animatedBlock2 = {\n      left: new Animated.Value(0),\n      right: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(IndeterminateProgress, [{\n    key: \"render\",\n    value: function render() {\n      var progressTheme = this.theme.progressStyle;\n      var style = {\n        backgroundColor: progressTheme.backgroundColor\n      };\n      var progressColor = this.props.progressColor || progressTheme.progressColor;\n      return React.createElement(View, {\n        style: [defaultSimpleProps.style, style, this.props.style],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          backgroundColor: progressColor,\n          position: 'absolute',\n          left: this._animatedBlock1.left,\n          right: this._animatedBlock1.right,\n          height: this._height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), React.createElement(Animated.View, {\n        style: {\n          backgroundColor: progressColor,\n          position: 'absolute',\n          left: this._animatedBlock2.left,\n          right: this._animatedBlock2.right,\n          height: this._height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_getBlock2Ani\",\n    value: function _getBlock2Ani() {\n      this._animatedBlock2.left.setValue(0);\n\n      this._animatedBlock2.right.setValue(this._totalLength);\n\n      return Animated.sequence([Animated.timing(this._animatedBlock2.right, {\n        toValue: this._totalLength * 0.75,\n        duration: this.props.progressAniDuration || 500\n      }), Animated.parallel([Animated.timing(this._animatedBlock2.left, {\n        toValue: this._totalLength,\n        duration: this.props.progressAniDuration || 705,\n        easing: Easing.out(Easing.quad)\n      }), Animated.timing(this._animatedBlock2.right, {\n        toValue: 0,\n        duration: this.props.progressAniDuration || 700,\n        easing: Easing.out(Easing.quad)\n      })])]);\n    }\n  }]);\n\n  return IndeterminateProgress;\n}(Component);\n\nexport { IndeterminateProgress as default };\nIndeterminateProgress.defaultProps = defaultSimpleProps;","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/mdl/IndeterminateProgress.js"],"names":["React","Component","getTheme","defaultSimpleProps","IndeterminateProgress","props","theme","_totalLength","_height","Animated","Value","_onLayout","nativeEvent","layout","width","height","setValue","_aniUpdateProgress","_animatedBlock1","left","right","sequence","parallel","timing","toValue","duration","progressAniDuration","easing","Easing","out","quad","_getBlock2Ani","start","finished","setImmediate","_animatedBlock2","progressTheme","progressStyle","style","backgroundColor","progressColor","position","defaultProps"],"mappings":";;;;;;;;;;;AAOA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,QAAT;AACA,SAASC,kBAAT;;IASqBC,qB;;;;;AACjB,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAaJ,QAAQ,EAArB;AAEA,UAAKK,YAAL,GAAoB,CAApB;AAEA,UAAKC,OAAL,GAAe,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAf;;AAEA,UAAKC,SAAL,GAAiB,gBAAsD;AAAA,uCAAnDC,WAAmD,CAApCC,MAAoC;AAAA,UAA1BC,KAA0B,yBAA1BA,KAA0B;AAAA,UAAnBC,MAAmB,yBAAnBA,MAAmB;;AACnE,UAAID,KAAK,GAAG,CAAR,IAAa,MAAKP,YAAL,KAAsBO,KAAvC,EAA8C;AAC1C,cAAKP,YAAL,GAAoBO,KAApB;;AACA,cAAKN,OAAL,CAAaQ,QAAb,CAAsBD,MAAtB;;AACA,cAAKE,kBAAL;AACH;AACJ,KAND;;AAOA,UAAKA,kBAAL,GAA0B,YAAM;AAC5B,UAAI,EAAE,MAAKV,YAAL,GAAoB,CAAtB,CAAJ,EAA8B;AAC1B;AACH;;AACD,YAAKW,eAAL,CAAqBC,IAArB,CAA0BH,QAA1B,CAAmC,CAAnC;;AACA,YAAKE,eAAL,CAAqBE,KAArB,CAA2BJ,QAA3B,CAAoC,MAAKT,YAAzC;;AACAE,MAAAA,QAAQ,CAACY,QAAT,CAAkB,CACdZ,QAAQ,CAACa,QAAT,CAAkB,CACdb,QAAQ,CAACc,MAAT,CAAgB,MAAKL,eAAL,CAAqBC,IAArC,EAA2C;AACvCK,QAAAA,OAAO,EAAE,MAAKjB,YAAL,GAAoB,IADU;AAEvCkB,QAAAA,QAAQ,EAAE,MAAKpB,KAAL,CAAWqB,mBAAX,IAAkC;AAFL,OAA3C,CADc,EAKdjB,QAAQ,CAACc,MAAT,CAAgB,MAAKL,eAAL,CAAqBE,KAArC,EAA4C;AACxCI,QAAAA,OAAO,EAAE,CAD+B;AAExCC,QAAAA,QAAQ,EAAE,MAAKpB,KAAL,CAAWqB,mBAAX,IAAkC;AAFJ,OAA5C,CALc,CAAlB,CADc,EAWdjB,QAAQ,CAACa,QAAT,CAAkB,CACdb,QAAQ,CAACc,MAAT,CAAgB,MAAKL,eAAL,CAAqBC,IAArC,EAA2C;AACvCK,QAAAA,OAAO,EAAE,MAAKjB,YADyB;AAEvCkB,QAAAA,QAAQ,EAAE,MAAKpB,KAAL,CAAWqB,mBAAX,IAAkC,GAFL;AAGvCC,QAAAA,MAAM,EAAEC,MAAM,CAACC,GAAP,CAAWD,MAAM,CAACE,IAAlB;AAH+B,OAA3C,CADc,EAMd,MAAKC,aAAL,EANc,CAAlB,CAXc,CAAlB,EAmBGC,KAnBH,CAmBS;AAAA,YAAGC,QAAH,SAAGA,QAAH;AAAA,eAAkBA,QAAQ,IAAIC,YAAY,CAAC,MAAKjB,kBAAN,CAA1C;AAAA,OAnBT;AAoBH,KA1BD;;AA2BA,UAAKC,eAAL,GAAuB;AACnBC,MAAAA,IAAI,EAAE,IAAIV,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADa;AAEnBU,MAAAA,KAAK,EAAE,IAAIX,QAAQ,CAACC,KAAb,CAAmB,CAAnB;AAFY,KAAvB;AAIA,UAAKyB,eAAL,GAAuB;AACnBhB,MAAAA,IAAI,EAAE,IAAIV,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADa;AAEnBU,MAAAA,KAAK,EAAE,IAAIX,QAAQ,CAACC,KAAb,CAAmB,CAAnB;AAFY,KAAvB;AA/Ce;AAmDlB;;;;6BAEQ;AACL,UAAM0B,aAAa,GAAG,KAAK9B,KAAL,CAAW+B,aAAjC;AACA,UAAMC,KAAK,GAAG;AAEVC,QAAAA,eAAe,EAAEH,aAAa,CAACG;AAFrB,OAAd;AAKA,UAAMC,aAAa,GAAG,KAAKnC,KAAL,CAAWmC,aAAX,IAA4BJ,aAAa,CAACI,aAAhE;AACA,aAAQ,oBAAC,IAAD;AACP,QAAA,KAAK,EAAE,CAACrC,kBAAkB,CAACmC,KAApB,EAA2BA,KAA3B,EAAkC,KAAKjC,KAAL,CAAWiC,KAA7C,CADA;AACqD,QAAA,QAAQ,EAAE,KAAK3B,SADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAER,oBAAC,QAAD,CAAU,IAAV;AACC,QAAA,KAAK,EAAE;AACJ4B,UAAAA,eAAe,EAAEC,aADb;AAEJC,UAAAA,QAAQ,EAAE,UAFN;AAGJtB,UAAAA,IAAI,EAAE,KAAKD,eAAL,CAAqBC,IAHvB;AAIJC,UAAAA,KAAK,EAAE,KAAKF,eAAL,CAAqBE,KAJxB;AAKJL,UAAAA,MAAM,EAAE,KAAKP;AALT,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFQ,EAUR,oBAAC,QAAD,CAAU,IAAV;AACC,QAAA,KAAK,EAAE;AACJ+B,UAAAA,eAAe,EAAEC,aADb;AAEJC,UAAAA,QAAQ,EAAE,UAFN;AAGJtB,UAAAA,IAAI,EAAE,KAAKgB,eAAL,CAAqBhB,IAHvB;AAIJC,UAAAA,KAAK,EAAE,KAAKe,eAAL,CAAqBf,KAJxB;AAKJL,UAAAA,MAAM,EAAE,KAAKP;AALT,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVQ,CAAR;AAmBH;;;oCAEe;AACZ,WAAK2B,eAAL,CAAqBhB,IAArB,CAA0BH,QAA1B,CAAmC,CAAnC;;AACA,WAAKmB,eAAL,CAAqBf,KAArB,CAA2BJ,QAA3B,CAAoC,KAAKT,YAAzC;;AACA,aAAOE,QAAQ,CAACY,QAAT,CAAkB,CACrBZ,QAAQ,CAACc,MAAT,CAAgB,KAAKY,eAAL,CAAqBf,KAArC,EAA4C;AACxCI,QAAAA,OAAO,EAAE,KAAKjB,YAAL,GAAoB,IADW;AAExCkB,QAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqB,mBAAX,IAAkC;AAFJ,OAA5C,CADqB,EAKrBjB,QAAQ,CAACa,QAAT,CAAkB,CACdb,QAAQ,CAACc,MAAT,CAAgB,KAAKY,eAAL,CAAqBhB,IAArC,EAA2C;AACvCK,QAAAA,OAAO,EAAE,KAAKjB,YADyB;AAEvCkB,QAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqB,mBAAX,IAAkC,GAFL;AAGvCC,QAAAA,MAAM,EAAEC,MAAM,CAACC,GAAP,CAAWD,MAAM,CAACE,IAAlB;AAH+B,OAA3C,CADc,EAMdrB,QAAQ,CAACc,MAAT,CAAgB,KAAKY,eAAL,CAAqBf,KAArC,EAA4C;AACxCI,QAAAA,OAAO,EAAE,CAD+B;AAExCC,QAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqB,mBAAX,IAAkC,GAFJ;AAGxCC,QAAAA,MAAM,EAAEC,MAAM,CAACC,GAAP,CAAWD,MAAM,CAACE,IAAlB;AAHgC,OAA5C,CANc,CAAlB,CALqB,CAAlB,CAAP;AAkBH;;;;EAxG8C7B,S;;SAA9BG,qB;AA2GrBA,qBAAqB,CAACsC,YAAtB,GAAqCvC,kBAArC","sourcesContent":["/**\n * MDL style indeterminate progress bar component.\n *\n * Refer to {@link http://www.getmdl.io/components/index.html#loading-section/progress | MDL Progress Bar}\n *\n * Created by ywu on 16/2/13.\n */\nimport React, { Component } from 'react';\nimport { Animated, Easing, View } from 'react-native';\nimport { getTheme } from '../theme';\nimport { defaultSimpleProps } from './progress_common';\n/**\n * Indeterminate linear progress indicator.\n *\n * @remarks\n * Continually growing and shrinking along the track until the process is complete. See {@link SimpleProgressProps} for the available props.\n *\n * Refer to {@link https://material.io/design/components/progress-indicators.html#linear-progress-indicators | Guideline} or {@link http://www.getmdl.io/components/index.html#loading-section/progress | MDL implementation}\n */\nexport default class IndeterminateProgress extends Component {\n    constructor(props) {\n        super(props);\n        /** Reference to App's {@link Theme} */\n        this.theme = getTheme();\n        /** line length when progress is 100% */\n        this._totalLength = 0;\n        /** height of the progress or line width */\n        this._height = new Animated.Value(0);\n        // property initializers begin\n        this._onLayout = ({ nativeEvent: { layout: { width, height }, }, }) => {\n            if (width > 0 && this._totalLength !== width) {\n                this._totalLength = width;\n                this._height.setValue(height);\n                this._aniUpdateProgress();\n            }\n        };\n        this._aniUpdateProgress = () => {\n            if (!(this._totalLength > 0)) {\n                return;\n            }\n            this._animatedBlock1.left.setValue(0);\n            this._animatedBlock1.right.setValue(this._totalLength);\n            Animated.sequence([\n                Animated.parallel([\n                    Animated.timing(this._animatedBlock1.left, {\n                        toValue: this._totalLength * 0.25,\n                        duration: this.props.progressAniDuration || 1250,\n                    }),\n                    Animated.timing(this._animatedBlock1.right, {\n                        toValue: 0,\n                        duration: this.props.progressAniDuration || 1250,\n                    }),\n                ]),\n                Animated.parallel([\n                    Animated.timing(this._animatedBlock1.left, {\n                        toValue: this._totalLength,\n                        duration: this.props.progressAniDuration || 500,\n                        easing: Easing.out(Easing.quad),\n                    }),\n                    this._getBlock2Ani(),\n                ]),\n            ]).start(({ finished }) => finished && setImmediate(this._aniUpdateProgress));\n        };\n        this._animatedBlock1 = {\n            left: new Animated.Value(0),\n            right: new Animated.Value(0),\n        };\n        this._animatedBlock2 = {\n            left: new Animated.Value(0),\n            right: new Animated.Value(0),\n        };\n    }\n    /** {@inheritDoc @types/react#Component.render} */\n    render() {\n        const progressTheme = this.theme.progressStyle;\n        const style = {\n            // @ts-ignore\n            backgroundColor: progressTheme.backgroundColor,\n        };\n        // @ts-ignore\n        const progressColor = this.props.progressColor || progressTheme.progressColor;\n        return (<View // the background layer\n         style={[defaultSimpleProps.style, style, this.props.style]} onLayout={this._onLayout}>\n        <Animated.View // the 1st animated progress block\n         style={{\n            backgroundColor: progressColor,\n            position: 'absolute',\n            left: this._animatedBlock1.left,\n            right: this._animatedBlock1.right,\n            height: this._height,\n        }}/>\n        <Animated.View // the 2nd animated progress block\n         style={{\n            backgroundColor: progressColor,\n            position: 'absolute',\n            left: this._animatedBlock2.left,\n            right: this._animatedBlock2.right,\n            height: this._height,\n        }}/>\n      </View>);\n    }\n    // property initializers end\n    _getBlock2Ani() {\n        this._animatedBlock2.left.setValue(0);\n        this._animatedBlock2.right.setValue(this._totalLength);\n        return Animated.sequence([\n            Animated.timing(this._animatedBlock2.right, {\n                toValue: this._totalLength * 0.75,\n                duration: this.props.progressAniDuration || 500,\n            }),\n            Animated.parallel([\n                Animated.timing(this._animatedBlock2.left, {\n                    toValue: this._totalLength,\n                    duration: this.props.progressAniDuration || 705,\n                    easing: Easing.out(Easing.quad),\n                }),\n                Animated.timing(this._animatedBlock2.right, {\n                    toValue: 0,\n                    duration: this.props.progressAniDuration || 700,\n                    easing: Easing.out(Easing.quad),\n                }),\n            ]),\n        ]);\n    }\n}\n/** Defaults, see {@link defaultSimpleProps} */\nIndeterminateProgress.defaultProps = defaultSimpleProps;\n//# sourceMappingURL=IndeterminateProgress.js.map"]},"metadata":{},"sourceType":"module"}