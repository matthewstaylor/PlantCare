{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\mdl\\\\RangeSlider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Thumb from \"../internal/Thumb\";\nimport { getTheme } from \"../theme\";\nvar THUMB_SCALE_RATIO = 1.3;\nvar THUMB_BORDER_WIDTH = 2;\nvar TRACK_EXTRA_MARGIN_V = 5;\nvar TRACK_EXTRA_MARGIN_H = 5;\nvar emptyRange = {\n  min: 0,\n  max: 0\n};\nvar defaultProps = {\n  thumbPadding: 0,\n  thumbRadius: 6,\n  trackSize: 2,\n  min: 0,\n  max: 100,\n  range: emptyRange,\n  step: 1\n};\n\nvar RangeSlider = function (_Component) {\n  _inherits(RangeSlider, _Component);\n\n  var _super = _createSuper(RangeSlider);\n\n  function RangeSlider(props) {\n    var _this;\n\n    _classCallCheck(this, RangeSlider);\n\n    _this = _super.call(this, props);\n    _this.theme = getTheme();\n    _this.minThumbRef = createRef();\n    _this.maxThumbRef = createRef();\n    _this.trackRef = createRef();\n    _this._range = {\n      min: 0,\n      max: 0\n    };\n    _this._trackTotalLength = 0;\n    _this._trackMarginH = 0;\n    _this._trackMarginV = 0;\n    _this._thumbRadiiWithBorder = 0;\n\n    _this._onTrackLayout = function (_ref) {\n      var width = _ref.nativeEvent.layout.width;\n\n      if (_this._trackTotalLength !== width) {\n        _this._trackTotalLength = width;\n\n        _this._setRange(_this.props.range || emptyRange);\n\n        _this._updateValue(_this._range);\n      }\n    };\n\n    _this._beginMove = function (ref, evt) {\n      _this.props.onStart && _this.props.onStart(ref, evt);\n\n      _this._updateValueByTouch(ref, evt);\n    };\n\n    _this._endMove = function (ref, evt) {\n      var thumb = _this.overrideThumb ? _this.overrideThumb : ref;\n      var dx = evt.nativeEvent.pageX;\n      _this.trackRef.current && _this.trackRef.current.measure(function (fx, fy, width, height, px) {\n        _this._validateMove(dx, px, width);\n\n        thumb.confirmMoveTo();\n        _this.overrideThumb = undefined;\n      });\n\n      _this._emitConfirm();\n    };\n\n    _this._updateValueByTouch = function (ref, evt) {\n      var thumb = _this.overrideThumb ? _this.overrideThumb : ref;\n      var dx = evt.nativeEvent.pageX;\n      _this.trackRef.current && _this.trackRef.current.measure(function (fx, fy, width, height, px) {\n        var _this$_validateMove = _this._validateMove(dx, px, width, thumb),\n            currThumb = _this$_validateMove.currThumb,\n            x = _this$_validateMove.x;\n\n        _this._internalSetValue(currThumb, x);\n\n        _this._moveThumb(currThumb, x);\n      });\n    };\n\n    _this._snap = function (val) {\n      var inc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this._defaultStepIncrement();\n      var current = Math.round(val);\n      var half = inc * 0.5;\n      var diff = current % inc;\n\n      if (diff >= half) {\n        var multiplier = Math.round(current / inc);\n        return inc * multiplier;\n      }\n\n      return current - diff;\n    };\n\n    _this._defaultStepIncrement = function () {\n      return _this._toPixelScale(_this.props.max) / ((_this.props.max - _this.props.min) / (_this.props.step || 1));\n    };\n\n    _this.overrideThumb = undefined;\n    _this._lowerTrackLength = new Animated.Value(_this._range.max - _this._range.min);\n    _this._lowerTrackMin = new Animated.Value(_this._range.min);\n    return _this;\n  }\n\n  _createClass(RangeSlider, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this._onThumbRadiiUpdate(this.props);\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this._onThumbRadiiUpdate(nextProps);\n\n      this._setRange(nextProps.range || emptyRange);\n\n      this._updateValue(this._range);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this._verifyStep();\n\n      var trackMargin = {\n        marginLeft: this._trackMarginH,\n        marginRight: this._trackMarginH,\n        marginTop: this._trackMarginV,\n        marginBottom: this._trackMarginV\n      };\n      var sliderStyle = this.theme.sliderStyle;\n      var lowerTrackColor = this.props.lowerTrackColor || sliderStyle.lowerTrackColor;\n      var upperTrackColor = this.props.upperTrackColor || sliderStyle.upperTrackColor;\n      return React.createElement(View, {\n        style: [this.props.style, {\n          padding: 0,\n          paddingTop: 0,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        ref: this.trackRef,\n        style: _extends({\n          height: this.props.trackSize,\n          backgroundColor: upperTrackColor\n        }, trackMargin),\n        onLayout: this._onTrackLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: this._lowerTrackMin,\n          width: this._lowerTrackLength,\n          height: this.props.trackSize,\n          backgroundColor: lowerTrackColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      })), React.createElement(Thumb, {\n        ref: this.minThumbRef,\n        radius: this.props.thumbRadius,\n        enabledColor: lowerTrackColor,\n        disabledColor: upperTrackColor,\n        onGrant: this._beginMove,\n        onMove: this._updateValueByTouch,\n        onEnd: this._endMove,\n        touchPadding: this.props.thumbPadding,\n        style: {\n          top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }), React.createElement(Thumb, {\n        ref: this.maxThumbRef,\n        radius: this.props.thumbRadius,\n        enabledColor: lowerTrackColor,\n        disabledColor: upperTrackColor,\n        onGrant: this._beginMove,\n        onMove: this._updateValueByTouch,\n        onEnd: this._endMove,\n        touchPadding: this.props.thumbPadding,\n        style: {\n          top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_setRange\",\n    value: function _setRange(_ref2) {\n      var min = _ref2.min,\n          max = _ref2.max;\n\n      var min2Scale = this._toPixelScale(min || 0);\n\n      var max2Scale = this._toPixelScale(max || 0);\n\n      var minBounds = this._toPixelScale(this.props.min);\n\n      var maxBounds = this._toPixelScale(this.props.max);\n\n      if (min2Scale > max2Scale) {\n        throw new Error(\"Minimum slider value: \" + min + \" is greater than max value: \" + max);\n      }\n\n      if (min2Scale < minBounds || min2Scale > maxBounds) {\n        throw new Error(\"Minimum slider value: \" + min + \" exceeds bounds:\\n        \" + this.props.min + \" - \" + this.props.max);\n      }\n\n      if (max2Scale < minBounds || max2Scale > maxBounds) {\n        throw new Error(\"Maximum slider value: \" + max + \" exceeds bounds:\\n        \" + this.props.min + \" - \" + this.props.max);\n      }\n\n      console.log(\"range => (\" + min2Scale + \", \" + max2Scale + \")\");\n      this._range = {\n        min: min2Scale,\n        max: max2Scale\n      };\n      return this._range;\n    }\n  }, {\n    key: \"_toSliderScale\",\n    value: function _toSliderScale(value) {\n      var trackToRange = (this.props.max - this.props.min) / this._trackTotalLength;\n      return value * trackToRange + this.props.min;\n    }\n  }, {\n    key: \"_toPixelScale\",\n    value: function _toPixelScale(value) {\n      var rangeToTrack = this._trackTotalLength / (this.props.max - this.props.min);\n      return (value - this.props.min) * rangeToTrack;\n    }\n  }, {\n    key: \"_internalSetValue\",\n    value: function _internalSetValue(ref, value) {\n      var target = ref === this.minThumb ? 'min' : 'max';\n      this._range[target] = value || 0;\n\n      this._emitChange();\n    }\n  }, {\n    key: \"_emitChange\",\n    value: function _emitChange() {\n      this.props.onChange && this.props.onChange({\n        min: this._toSliderScale(this._range.min),\n        max: this._toSliderScale(this._range.max)\n      });\n    }\n  }, {\n    key: \"_emitConfirm\",\n    value: function _emitConfirm() {\n      this.props.onConfirm && this.props.onConfirm({\n        min: this._toSliderScale(this._range.min),\n        max: this._toSliderScale(this._range.max)\n      });\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(values) {\n      if (!this._trackTotalLength) {\n        return;\n      }\n\n      var lthumb = this.minThumb;\n      var rthumb = this.maxThumb;\n\n      this._moveThumb(lthumb, values.min);\n\n      lthumb && lthumb.confirmMoveTo();\n\n      this._moveThumb(rthumb, values.max);\n\n      rthumb && rthumb.confirmMoveTo();\n    }\n  }, {\n    key: \"_validateMove\",\n    value: function _validateMove(dx, trackOriginX, trackWidth, thumb) {\n      var x = dx - trackOriginX;\n\n      var onTrack = function onTrack(relX) {\n        var upperBound = relX >= trackWidth ? trackWidth : relX;\n        return relX <= 0 ? 0 : upperBound;\n      };\n\n      if (!thumb) {\n        return {};\n      }\n\n      var minThumb = this.minThumb;\n      var maxThumb = this.maxThumb;\n\n      if (!minThumb || !maxThumb) {\n        return {};\n      }\n\n      var currThumb = thumb;\n\n      if (minThumb.x === maxThumb.x) {\n        if (x > maxThumb.x) {\n          currThumb = this.overrideThumb = maxThumb;\n          thumb && thumb.confirmMoveTo();\n        } else if (x < minThumb.x) {\n          currThumb = this.overrideThumb = minThumb;\n          thumb && thumb.confirmMoveTo();\n        }\n      }\n\n      var valX = 0;\n\n      if (currThumb === minThumb) {\n        valX = x >= maxThumb.x ? maxThumb.x : onTrack(x);\n      } else if (currThumb === maxThumb) {\n        valX = x <= minThumb.x ? minThumb.x : onTrack(x);\n      }\n\n      return {\n        currThumb: currThumb,\n        x: this._snap(valX)\n      };\n    }\n  }, {\n    key: \"_moveThumb\",\n    value: function _moveThumb(thumb, x) {\n      if (!thumb || !x) {\n        return;\n      }\n\n      thumb.moveTo(x);\n      Animated.parallel([Animated.timing(this._lowerTrackMin, {\n        toValue: this._range.min,\n        duration: 0\n      }), Animated.timing(this._lowerTrackLength, {\n        toValue: this._range.max - this._range.min,\n        duration: 0\n      })]).start();\n    }\n  }, {\n    key: \"_onThumbRadiiUpdate\",\n    value: function _onThumbRadiiUpdate(props) {\n      var thumbRadii = props.thumbRadius || 0;\n      this._thumbRadiiWithBorder = thumbRadii + THUMB_BORDER_WIDTH;\n      this._trackMarginV = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO + TRACK_EXTRA_MARGIN_V - (this.props.trackSize || 0) / 2;\n      this._trackMarginH = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO + TRACK_EXTRA_MARGIN_H;\n    }\n  }, {\n    key: \"_verifyStep\",\n    value: function _verifyStep() {\n      var divisor = (this.props.max - this.props.min) / (this.props.step || 1);\n\n      if (divisor % 1 !== 0) {\n        throw new Error(\"Given step ( \" + this.props.step + \" ) must be         a divisor of max ( \" + this.props.max + \" )\");\n      }\n    }\n  }, {\n    key: \"minValue\",\n    set: function set(value) {\n      var range = this._setRange({\n        min: value,\n        max: this._toSliderScale(this._range.max)\n      });\n\n      this._updateValue(range);\n\n      this._emitChange();\n    },\n    get: function get() {\n      return this._toSliderScale(this._range.min);\n    }\n  }, {\n    key: \"maxValue\",\n    set: function set(value) {\n      var range = this._setRange({\n        min: this._toSliderScale(this._range.min),\n        max: value\n      });\n\n      this._updateValue(range);\n\n      this._emitChange();\n    },\n    get: function get() {\n      return this._toSliderScale(this._range.max);\n    }\n  }, {\n    key: \"minThumb\",\n    get: function get() {\n      return this.minThumbRef && this.minThumbRef.current;\n    }\n  }, {\n    key: \"maxThumb\",\n    get: function get() {\n      return this.maxThumbRef && this.maxThumbRef.current;\n    }\n  }]);\n\n  return RangeSlider;\n}(Component);\n\nexport { RangeSlider as default };\nRangeSlider.defaultProps = defaultProps;","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js"],"names":["React","Component","createRef","Thumb","getTheme","THUMB_SCALE_RATIO","THUMB_BORDER_WIDTH","TRACK_EXTRA_MARGIN_V","TRACK_EXTRA_MARGIN_H","emptyRange","min","max","defaultProps","thumbPadding","thumbRadius","trackSize","range","step","RangeSlider","props","theme","minThumbRef","maxThumbRef","trackRef","_range","_trackTotalLength","_trackMarginH","_trackMarginV","_thumbRadiiWithBorder","_onTrackLayout","width","nativeEvent","layout","_setRange","_updateValue","_beginMove","ref","evt","onStart","_updateValueByTouch","_endMove","thumb","overrideThumb","dx","pageX","current","measure","fx","fy","height","px","_validateMove","confirmMoveTo","undefined","_emitConfirm","currThumb","x","_internalSetValue","_moveThumb","_snap","val","inc","_defaultStepIncrement","Math","round","half","diff","multiplier","_toPixelScale","_lowerTrackLength","Animated","Value","_lowerTrackMin","_onThumbRadiiUpdate","nextProps","_verifyStep","trackMargin","marginLeft","marginRight","marginTop","marginBottom","sliderStyle","lowerTrackColor","upperTrackColor","style","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","position","left","top","min2Scale","max2Scale","minBounds","maxBounds","Error","console","log","value","trackToRange","rangeToTrack","target","minThumb","_emitChange","onChange","_toSliderScale","onConfirm","values","lthumb","rthumb","maxThumb","trackOriginX","trackWidth","onTrack","relX","upperBound","valX","moveTo","parallel","timing","toValue","duration","start","thumbRadii","divisor"],"mappings":"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","sourcesContent":["/**\n * RangeSlider component.\n *\n * Created by awaidman on 16/1/21.\n */\nimport React, { Component, createRef } from 'react';\nimport { Animated, View } from 'react-native';\nimport Thumb from '../internal/Thumb';\nimport { getTheme } from '../theme';\n// The max scale of the thumb\nconst THUMB_SCALE_RATIO = 1.3;\n// Width of the thumb border\nconst THUMB_BORDER_WIDTH = 2;\n// extra spacing enlarging the touchable area\nconst TRACK_EXTRA_MARGIN_V = 5;\nconst TRACK_EXTRA_MARGIN_H = 5;\nconst emptyRange = { min: 0, max: 0 };\n/** Default props of {@link RangeSlider}, see {@link RangeSliderProps} */\nconst defaultProps = {\n    thumbPadding: 0,\n    thumbRadius: 6,\n    trackSize: 2,\n    min: 0,\n    max: 100,\n    range: emptyRange,\n    step: 1,\n};\n/**\n * The `RangeSlider` component.\n *\n * @remarks\n * See {@link RangeSliderProps} for the available props.\n * Refer to {@link https://material.io/design/components/sliders.html | Guideline} or {@link http://www.getmdl.io/components/index.html#sliders-section | MDL implementation}\n */\nexport default class RangeSlider extends Component {\n    constructor(props) {\n        super(props);\n        /** Reference to App's {@link Theme} */\n        this.theme = getTheme();\n        this.minThumbRef = createRef();\n        this.maxThumbRef = createRef();\n        this.trackRef = createRef();\n        this._range = { min: 0, max: 0 };\n        this._trackTotalLength = 0;\n        this._trackMarginH = 0;\n        this._trackMarginV = 0;\n        this._thumbRadiiWithBorder = 0;\n        // region private property initializers\n        /** callback when the Track component's layout changes */\n        this._onTrackLayout = ({ nativeEvent: { layout: { width }, }, }) => {\n            if (this._trackTotalLength !== width) {\n                this._trackTotalLength = width;\n                this._setRange(this.props.range || emptyRange);\n                this._updateValue(this._range);\n            }\n        };\n        // Respond to Grant gestures\n        this._beginMove = (ref, evt) => {\n            this.props.onStart && this.props.onStart(ref, evt);\n            this._updateValueByTouch(ref, evt);\n        };\n        // Respond to both cancelled and finished gestures\n        this._endMove = (ref, evt) => {\n            const thumb = this.overrideThumb ? this.overrideThumb : ref;\n            const dx = evt.nativeEvent.pageX;\n            this.trackRef.current &&\n                this.trackRef.current.measure((fx, fy, width, height, px) => {\n                    this._validateMove(dx, px, width);\n                    thumb.confirmMoveTo();\n                    this.overrideThumb = undefined;\n                });\n            this._emitConfirm();\n        };\n        // Respond to Move touch gestures\n        this._updateValueByTouch = (ref, evt) => {\n            const thumb = this.overrideThumb ? this.overrideThumb : ref;\n            const dx = evt.nativeEvent.pageX;\n            this.trackRef.current &&\n                this.trackRef.current.measure((fx, fy, width, height, px) => {\n                    const { currThumb, x } = this._validateMove(dx, px, width, thumb);\n                    this._internalSetValue(currThumb, x);\n                    this._moveThumb(currThumb, x);\n                });\n        };\n        // Snap thumb by step, default step = 1\n        this._snap = (val, inc = this._defaultStepIncrement()) => {\n            const current = Math.round(val);\n            const half = inc * 0.5;\n            const diff = current % inc;\n            if (diff >= half) {\n                const multiplier = Math.round(current / inc);\n                return inc * multiplier;\n            }\n            return current - diff;\n        };\n        this._defaultStepIncrement = () => this._toPixelScale(this.props.max) / ((this.props.max - this.props.min) / (this.props.step || 1));\n        // this.overrideThumbRef = undefined;\n        this.overrideThumb = undefined;\n        this._lowerTrackLength = new Animated.Value(this._range.max - this._range.min);\n        this._lowerTrackMin = new Animated.Value(this._range.min);\n    }\n    /** Public api to update the current `minValue` */\n    set minValue(value) {\n        const range = this._setRange({\n            min: value,\n            max: this._toSliderScale(this._range.max),\n        });\n        this._updateValue(range);\n        this._emitChange();\n    }\n    /** Retrieve the current `minValue` */\n    get minValue() {\n        return this._toSliderScale(this._range.min);\n    }\n    /** Public api to update the current `maxValue` */\n    set maxValue(value) {\n        const range = this._setRange({\n            min: this._toSliderScale(this._range.min),\n            max: value,\n        });\n        this._updateValue(range);\n        this._emitChange();\n    }\n    /** Retrieve the current `maxValue` */\n    get maxValue() {\n        return this._toSliderScale(this._range.max);\n    }\n    get minThumb() {\n        return this.minThumbRef && this.minThumbRef.current;\n    }\n    get maxThumb() {\n        return this.maxThumbRef && this.maxThumbRef.current;\n    }\n    UNSAFE_componentWillMount() {\n        this._onThumbRadiiUpdate(this.props);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this._onThumbRadiiUpdate(nextProps);\n        this._setRange(nextProps.range || emptyRange);\n        this._updateValue(this._range);\n    }\n    render() {\n        this._verifyStep();\n        // making room for the Thumb, cause's Android doesn't support `overflow: visible`\n        // - @see http://bit.ly/1Fzr5SE\n        const trackMargin = {\n            marginLeft: this._trackMarginH,\n            marginRight: this._trackMarginH,\n            marginTop: this._trackMarginV,\n            marginBottom: this._trackMarginV,\n        };\n        const sliderStyle = this.theme.sliderStyle;\n        // @ts-ignore\n        const lowerTrackColor = this.props.lowerTrackColor || sliderStyle.lowerTrackColor;\n        // @ts-ignore\n        const upperTrackColor = this.props.upperTrackColor || sliderStyle.upperTrackColor;\n        return (<View style={[\n            this.props.style,\n            {\n                padding: 0,\n                paddingTop: 0,\n                paddingBottom: 0,\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        ]}>\n        <View ref={this.trackRef} style={Object.assign({ height: this.props.trackSize, backgroundColor: upperTrackColor }, trackMargin)} onLayout={this._onTrackLayout}>\n          <Animated.View style={{\n            position: 'absolute',\n            left: this._lowerTrackMin,\n            width: this._lowerTrackLength,\n            height: this.props.trackSize,\n            backgroundColor: lowerTrackColor,\n        }}/>\n        </View>\n        <Thumb ref={this.minThumbRef} radius={this.props.thumbRadius} enabledColor={lowerTrackColor} disabledColor={upperTrackColor} onGrant={this._beginMove} onMove={this._updateValueByTouch} onEnd={this._endMove} touchPadding={this.props.thumbPadding} style={{\n            top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V,\n        }}/>\n\n        <Thumb ref={this.maxThumbRef} radius={this.props.thumbRadius} enabledColor={lowerTrackColor} disabledColor={upperTrackColor} onGrant={this._beginMove} onMove={this._updateValueByTouch} onEnd={this._endMove} touchPadding={this.props.thumbPadding} style={{\n            top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V,\n        }}/>\n      </View>);\n    }\n    // endregion\n    // Throw error if preset ranges are invalid\n    _setRange({ min, max }) {\n        const min2Scale = this._toPixelScale(min || 0);\n        const max2Scale = this._toPixelScale(max || 0);\n        const minBounds = this._toPixelScale(this.props.min);\n        const maxBounds = this._toPixelScale(this.props.max);\n        if (min2Scale > max2Scale) {\n            throw new Error(`Minimum slider value: ${min} is greater than max value: ${max}`);\n        }\n        if (min2Scale < minBounds || min2Scale > maxBounds) {\n            throw new Error(`Minimum slider value: ${min} exceeds bounds:\n        ${this.props.min} - ${this.props.max}`);\n        }\n        if (max2Scale < minBounds || max2Scale > maxBounds) {\n            throw new Error(`Maximum slider value: ${max} exceeds bounds:\n        ${this.props.min} - ${this.props.max}`);\n        }\n        // tslint:disable-next-line:no-console\n        console.log(`range => (${min2Scale}, ${max2Scale})`);\n        this._range = {\n            min: min2Scale,\n            max: max2Scale,\n        };\n        return this._range;\n    }\n    // Scale global xy coordinate values to track values\n    _toSliderScale(value) {\n        const trackToRange = (this.props.max - this.props.min) / this._trackTotalLength;\n        return value * trackToRange + this.props.min;\n    }\n    // Scale track values to global xy coordinate system\n    _toPixelScale(value) {\n        const rangeToTrack = this._trackTotalLength / (this.props.max - this.props.min);\n        return (value - this.props.min) * rangeToTrack;\n    }\n    // Set values for thumb components for user touch events\n    _internalSetValue(ref, value) {\n        const target = ref === this.minThumb ? 'min' : 'max';\n        this._range[target] = value || 0;\n        this._emitChange();\n    }\n    // Send changed values to onChange callback\n    _emitChange() {\n        this.props.onChange &&\n            this.props.onChange({\n                min: this._toSliderScale(this._range.min),\n                max: this._toSliderScale(this._range.max),\n            });\n    }\n    _emitConfirm() {\n        this.props.onConfirm &&\n            this.props.onConfirm({\n                min: this._toSliderScale(this._range.min),\n                max: this._toSliderScale(this._range.max),\n            });\n    }\n    // Internal update of ranges. Values should be to \"Pixel Scale\"\n    _updateValue(values) {\n        if (!this._trackTotalLength) {\n            return;\n        }\n        const lthumb = this.minThumb;\n        const rthumb = this.maxThumb;\n        this._moveThumb(lthumb, values.min);\n        // lthumb && lthumb.confirmMoveTo(values.min);\n        lthumb && lthumb.confirmMoveTo();\n        this._moveThumb(rthumb, values.max);\n        // rthumb && rthumb.confirmMoveTo(values.max);\n        rthumb && rthumb.confirmMoveTo();\n    }\n    // Ensure thumbs do not cross each other or track boundaries\n    _validateMove(dx, trackOriginX, trackWidth, thumb) {\n        const x = dx - trackOriginX;\n        const onTrack = (relX) => {\n            const upperBound = relX >= trackWidth ? trackWidth : relX;\n            return relX <= 0 ? 0 : upperBound;\n        };\n        if (!thumb) {\n            return {};\n        }\n        const minThumb = this.minThumb;\n        const maxThumb = this.maxThumb;\n        if (!minThumb || !maxThumb) {\n            return {};\n        }\n        let currThumb = thumb;\n        if (minThumb.x === maxThumb.x) {\n            if (x > maxThumb.x) {\n                currThumb = this.overrideThumb = maxThumb;\n                thumb && thumb.confirmMoveTo();\n            }\n            else if (x < minThumb.x) {\n                currThumb = this.overrideThumb = minThumb;\n                thumb && thumb.confirmMoveTo();\n            }\n        }\n        let valX = 0;\n        if (currThumb === minThumb) {\n            valX = x >= maxThumb.x ? maxThumb.x : onTrack(x);\n        }\n        else if (currThumb === maxThumb) {\n            valX = x <= minThumb.x ? minThumb.x : onTrack(x);\n        }\n        return { currThumb, x: this._snap(valX) };\n    }\n    // Induce smooth animation to move each thumb component\n    _moveThumb(thumb, x) {\n        if (!thumb || !x) {\n            return;\n        }\n        thumb.moveTo(x);\n        Animated.parallel([\n            Animated.timing(this._lowerTrackMin, {\n                toValue: this._range.min,\n                duration: 0,\n            }),\n            Animated.timing(this._lowerTrackLength, {\n                toValue: this._range.max - this._range.min,\n                duration: 0,\n            }),\n        ]).start();\n    }\n    // when thumb radii updated, re-calc the dimensions\n    _onThumbRadiiUpdate(props) {\n        const thumbRadii = props.thumbRadius || 0;\n        this._thumbRadiiWithBorder = thumbRadii + THUMB_BORDER_WIDTH;\n        this._trackMarginV =\n            this._thumbRadiiWithBorder * THUMB_SCALE_RATIO + TRACK_EXTRA_MARGIN_V - (this.props.trackSize || 0) / 2;\n        this._trackMarginH = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO + TRACK_EXTRA_MARGIN_H;\n    }\n    // Step must be a divisor of max\n    _verifyStep() {\n        const divisor = (this.props.max - this.props.min) / (this.props.step || 1);\n        if (divisor % 1 !== 0) {\n            throw new Error(`Given step ( ${this.props.step} ) must be \\\n        a divisor of max ( ${this.props.max} )`);\n        }\n    }\n}\n/** Defaults, see {@link defaultProps} */\nRangeSlider.defaultProps = defaultProps;\n//# sourceMappingURL=RangeSlider.js.map"]},"metadata":{},"sourceType":"module"}