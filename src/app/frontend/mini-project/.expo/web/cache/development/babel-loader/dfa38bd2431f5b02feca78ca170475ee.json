{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport MKColor from \"./MKColor\";\nvar theme = {};\n\nvar AttrReference = function () {\n  function AttrReference(attr) {\n    _classCallCheck(this, AttrReference);\n\n    this.attr = attr;\n  }\n\n  _createClass(AttrReference, [{\n    key: \"value\",\n    get: function get() {\n      return theme[this.attr];\n    }\n  }]);\n\n  return AttrReference;\n}();\n\nvar RGBAttrReference = function (_AttrReference) {\n  _inherits(RGBAttrReference, _AttrReference);\n\n  var _super = _createSuper(RGBAttrReference);\n\n  function RGBAttrReference(attr, alpha) {\n    var _this;\n\n    _classCallCheck(this, RGBAttrReference);\n\n    _this = _super.call(this, attr);\n    _this.alpha = alpha;\n    return _this;\n  }\n\n  _createClass(RGBAttrReference, [{\n    key: \"value\",\n    get: function get() {\n      var v = _get(_getPrototypeOf(RGBAttrReference.prototype), \"value\", this);\n\n      return this.alpha > 0 ? \"rgba(\" + v + \", \" + this.alpha + \")\" : \"rgb(\" + v + \")\";\n    }\n  }]);\n\n  return RGBAttrReference;\n}(AttrReference);\n\nvar primaryColorRef = new AttrReference('primaryColor');\nvar accentColorRef = new AttrReference('accentColor');\n\n_extends(theme, {\n  primaryColor: MKColor.Indigo,\n  primaryColorRGB: MKColor.RGBIndigo,\n  accentColor: MKColor.Pink,\n  accentColorRGB: MKColor.RGBPink,\n  bgDisabled: 'rgba(0, 0, 0, 0.12)',\n  bgPlain: 'rgba(158, 158, 158, 0.2)',\n  fontColor: 'rgb(117, 117, 117)',\n  fontSize: 14,\n  rippleColor: 'rgba(255, 255, 255, 0.125)',\n  textfieldStyle: {\n    highlightColor: new RGBAttrReference('primaryColorRGB', 0.9),\n    textInputStyle: {\n      color: new AttrReference('fontColor'),\n      fontSize: 16,\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    tintColor: 'rgba(0, 0, 0, 0.12)'\n  },\n  progressStyle: {\n    backgroundColor: new RGBAttrReference('primaryColorRGB', 0.3),\n    bufferColor: new RGBAttrReference('primaryColorRGB', 0.3),\n    progressColor: primaryColorRef\n  },\n  spinnerStyle: {\n    strokeColor: [MKColor.palette_blue_400, MKColor.palette_red_500, MKColor.palette_yellow_600, MKColor.palette_green_500]\n  },\n  sliderStyle: {\n    lowerTrackColor: primaryColorRef,\n    upperTrackColor: '#cccccc'\n  },\n  iconToggleStyle: {\n    offColor: 'rgba(0, 0, 0, 0.25)',\n    onColor: new RGBAttrReference('primaryColorRGB', 0.4),\n    rippleColor: new AttrReference('bgPlain')\n  },\n  switchStyle: {\n    offColor: 'rgba(0, 0, 0, 0.25)',\n    onColor: new RGBAttrReference('primaryColorRGB', 0.4),\n    rippleColor: new RGBAttrReference('primaryColorRGB', 0.2),\n    thumbOffColor: MKColor.Silver,\n    thumbOnColor: primaryColorRef\n  },\n  radioStyle: {\n    borderOffColor: primaryColorRef,\n    borderOnColor: primaryColorRef,\n    fillColor: primaryColorRef,\n    rippleColor: new RGBAttrReference('primaryColorRGB', 0.2)\n  },\n  checkboxStyle: {\n    borderOffColor: 'rgba(0, 0, 0, 0.56)',\n    borderOnColor: primaryColorRef,\n    fillColor: primaryColorRef,\n    inset: 0,\n    rippleColor: new RGBAttrReference('primaryColorRGB', 0.2)\n  },\n  cardStyle: {\n    backgroundColor: '#ffffff',\n    borderColor: '#ffffff',\n    borderRadius: 2,\n    borderWidth: 1,\n    shadowColor: 'rgba(0, 0, 0, 0.12)',\n    shadowOffset: {\n      height: 1,\n      width: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2\n  },\n  cardImageStyle: {\n    height: 170,\n    resizeMode: 'cover'\n  },\n  cardTitleStyle: {\n    position: 'absolute',\n    left: 26,\n    top: 120,\n    backgroundColor: 'transparent',\n    color: '#000000',\n    fontSize: 24,\n    fontWeight: 'bold',\n    padding: 16\n  },\n  cardContentStyle: {\n    color: 'rgba(0, 0, 0, 0.54)',\n    padding: 15\n  },\n  cardActionStyle: {\n    borderStyle: 'solid',\n    borderTopColor: 'rgba(0, 0, 0, 0.1)',\n    borderTopWidth: 1,\n    padding: 15\n  },\n  cardMenuStyle: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    right: 16,\n    top: 16\n  }\n});\n\nfunction isPlainObject(o) {\n  return typeof o === 'object' && !Array.isArray(o) && o !== null && !(o instanceof String) && !(o instanceof Function);\n}\n\nfunction wrapAttrRef(style, attr, attrValue) {\n  Object.defineProperty(style, attr, {\n    enumerable: true,\n    get: function get() {\n      return attrValue.value;\n    }\n  });\n}\n\nfunction wrapStyle(style) {\n  Object.getOwnPropertyNames(style).forEach(function (attr) {\n    var v = style[attr];\n\n    if (v instanceof AttrReference) {\n      wrapAttrRef(style, attr, v);\n    } else if (isPlainObject(v)) {\n      wrapStyle(v);\n    }\n  });\n  return style;\n}\n\nwrapStyle(theme);\nexport function setTheme(aTheme) {\n  _extends(theme, wrapStyle(aTheme));\n}\nexport function getTheme() {\n  return _extends({}, theme);\n}\nexport default {\n  AttrReference: AttrReference,\n  RGBAttrReference: RGBAttrReference,\n  accentColorRef: accentColorRef,\n  primaryColorRef: primaryColorRef\n};","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/theme.js"],"names":["MKColor","theme","AttrReference","attr","RGBAttrReference","alpha","v","primaryColorRef","accentColorRef","primaryColor","Indigo","primaryColorRGB","RGBIndigo","accentColor","Pink","accentColorRGB","RGBPink","bgDisabled","bgPlain","fontColor","fontSize","rippleColor","textfieldStyle","highlightColor","textInputStyle","color","paddingLeft","paddingRight","tintColor","progressStyle","backgroundColor","bufferColor","progressColor","spinnerStyle","strokeColor","palette_blue_400","palette_red_500","palette_yellow_600","palette_green_500","sliderStyle","lowerTrackColor","upperTrackColor","iconToggleStyle","offColor","onColor","switchStyle","thumbOffColor","Silver","thumbOnColor","radioStyle","borderOffColor","borderOnColor","fillColor","checkboxStyle","inset","cardStyle","borderColor","borderRadius","borderWidth","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","cardImageStyle","resizeMode","cardTitleStyle","position","left","top","fontWeight","padding","cardContentStyle","cardActionStyle","borderStyle","borderTopColor","borderTopWidth","cardMenuStyle","right","isPlainObject","o","Array","isArray","String","Function","wrapAttrRef","style","attrValue","Object","defineProperty","enumerable","get","value","wrapStyle","getOwnPropertyNames","forEach","setTheme","aTheme","getTheme"],"mappings":"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","sourcesContent":["/* tslint:disable:max-classes-per-file */\n/**\n * Theme definition.\n *\n * Created by ywu on 15/7/18.\n */\nimport MKColor from './MKColor';\nconst theme = {};\nclass AttrReference {\n    constructor(attr) {\n        this.attr = attr;\n    }\n    get value() {\n        return theme[this.attr];\n    }\n}\nclass RGBAttrReference extends AttrReference {\n    constructor(attr, alpha) {\n        super(attr);\n        this.alpha = alpha;\n    }\n    get value() {\n        // @ts-ignore: https://github.com/Microsoft/TypeScript/issues/4465\n        const v = super.value;\n        return this.alpha > 0 ? `rgba(${v}, ${this.alpha})` : `rgb(${v})`;\n    }\n}\nconst primaryColorRef = new AttrReference('primaryColor');\nconst accentColorRef = new AttrReference('accentColor');\n//\n// ## <section id='theme'>theme</section>\n//\nObject.assign(theme, {\n    primaryColor: MKColor.Indigo,\n    primaryColorRGB: MKColor.RGBIndigo,\n    accentColor: MKColor.Pink,\n    accentColorRGB: MKColor.RGBPink,\n    bgDisabled: 'rgba(0, 0, 0, 0.12)',\n    bgPlain: 'rgba(158, 158, 158, 0.2)',\n    fontColor: 'rgb(117, 117, 117)',\n    fontSize: 14,\n    rippleColor: 'rgba(255, 255, 255, 0.125)',\n    textfieldStyle: {\n        highlightColor: new RGBAttrReference('primaryColorRGB', 0.9),\n        textInputStyle: {\n            color: new AttrReference('fontColor'),\n            fontSize: 16,\n            paddingLeft: 0,\n            paddingRight: 0,\n        },\n        tintColor: 'rgba(0, 0, 0, 0.12)',\n    },\n    progressStyle: {\n        backgroundColor: new RGBAttrReference('primaryColorRGB', 0.3),\n        bufferColor: new RGBAttrReference('primaryColorRGB', 0.3),\n        progressColor: primaryColorRef,\n    },\n    spinnerStyle: {\n        strokeColor: [\n            MKColor.palette_blue_400,\n            MKColor.palette_red_500,\n            MKColor.palette_yellow_600,\n            MKColor.palette_green_500,\n        ],\n    },\n    sliderStyle: {\n        lowerTrackColor: primaryColorRef,\n        upperTrackColor: '#cccccc',\n    },\n    iconToggleStyle: {\n        offColor: 'rgba(0, 0, 0, 0.25)',\n        onColor: new RGBAttrReference('primaryColorRGB', 0.4),\n        rippleColor: new AttrReference('bgPlain'),\n    },\n    switchStyle: {\n        offColor: 'rgba(0, 0, 0, 0.25)',\n        onColor: new RGBAttrReference('primaryColorRGB', 0.4),\n        rippleColor: new RGBAttrReference('primaryColorRGB', 0.2),\n        thumbOffColor: MKColor.Silver,\n        thumbOnColor: primaryColorRef,\n    },\n    radioStyle: {\n        borderOffColor: primaryColorRef,\n        borderOnColor: primaryColorRef,\n        fillColor: primaryColorRef,\n        rippleColor: new RGBAttrReference('primaryColorRGB', 0.2),\n    },\n    checkboxStyle: {\n        borderOffColor: 'rgba(0, 0, 0, 0.56)',\n        borderOnColor: primaryColorRef,\n        fillColor: primaryColorRef,\n        inset: 0,\n        rippleColor: new RGBAttrReference('primaryColorRGB', 0.2),\n    },\n    cardStyle: {\n        backgroundColor: '#ffffff',\n        borderColor: '#ffffff',\n        borderRadius: 2,\n        borderWidth: 1,\n        shadowColor: 'rgba(0, 0, 0, 0.12)',\n        shadowOffset: {\n            height: 1,\n            width: 2,\n        },\n        shadowOpacity: 0.8,\n        shadowRadius: 2,\n    },\n    cardImageStyle: {\n        height: 170,\n        resizeMode: 'cover',\n    },\n    cardTitleStyle: {\n        position: 'absolute',\n        left: 26,\n        top: 120,\n        backgroundColor: 'transparent',\n        color: '#000000',\n        fontSize: 24,\n        fontWeight: 'bold',\n        padding: 16,\n    },\n    cardContentStyle: {\n        color: 'rgba(0, 0, 0, 0.54)',\n        padding: 15,\n    },\n    cardActionStyle: {\n        borderStyle: 'solid',\n        borderTopColor: 'rgba(0, 0, 0, 0.1)',\n        borderTopWidth: 1,\n        padding: 15,\n    },\n    cardMenuStyle: {\n        backgroundColor: 'transparent',\n        position: 'absolute',\n        right: 16,\n        top: 16,\n    },\n});\nfunction isPlainObject(o) {\n    return (typeof o === 'object' &&\n        !Array.isArray(o) &&\n        o !== null &&\n        !(o instanceof String) &&\n        !(o instanceof Function));\n}\n/** Wrap style object with custom getter, for resolving the attribute references. */\nfunction wrapAttrRef(style, attr, attrValue) {\n    Object.defineProperty(style, attr, {\n        enumerable: true,\n        get() {\n            return attrValue.value;\n        },\n    });\n}\n/** Wrap all style attributes with custom getter, recursively */\nfunction wrapStyle(style) {\n    Object.getOwnPropertyNames(style).forEach(attr => {\n        const v = style[attr];\n        if (v instanceof AttrReference) {\n            wrapAttrRef(style, attr, v);\n        }\n        else if (isPlainObject(v)) {\n            wrapStyle(v);\n        }\n    });\n    return style;\n}\n// Wrap the theme object, in order to resolving the attribute references.\nwrapStyle(theme);\n/**\n * Set the current theme.\n * @param `aTheme` the new {@link Theme}\n *\n * See http://www.getmdl.io/customize\n */\nexport function setTheme(aTheme) {\n    Object.assign(theme, wrapStyle(aTheme));\n}\n/** Retrieve a copy of the current theme */\nexport function getTheme() {\n    return Object.assign({}, theme);\n}\nexport default {\n    AttrReference,\n    RGBAttrReference,\n    accentColorRef,\n    primaryColorRef,\n};\n//# sourceMappingURL=theme.js.map"]},"metadata":{},"sourceType":"module"}