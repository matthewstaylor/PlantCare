{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\src\\\\components\\\\WateringSchedule\\\\WateringSchedule.component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Headline, Surface, Button, Paragraph, IconButton, useTheme, Divider, Subheading, List, TextInput, Dialog, Portal } from 'react-native-paper';\nimport styles from \"./WateringSchedule.styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { formatAMPM } from \"../Dashboard/Dashboard.component\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nvar API_ENDPOINT = 'http://ec2-52-14-234-1.us-east-2.compute.amazonaws.com';\n\nvar WateringSchedule = function WateringSchedule(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      nextWateringTime = _React$useState2[0],\n      setNextWateringTime = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modificationState = _React$useState4[0],\n      setModificationState = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    id: 0,\n    notes: '',\n    success: false,\n    time_posted: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      lastFiveWatering = _React$useState6[0],\n      setlastFiveWatering = _React$useState6[1];\n\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var isNumber = /^\\d+$/;\n  var frequencyOptions = [{\n    value: 'Day'\n  }, {\n    value: 'Week'\n  }, {\n    value: 'Month'\n  }];\n  var timer;\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      isDatePickerVisible = _React$useState8[0],\n      setDatePickerVisibility = _React$useState8[1];\n\n  var _React$useState9 = React.useState({\n    frequencyNumber: '1',\n    date: new Date()\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      formContents = _React$useState10[0],\n      setFormContents = _React$useState10[1];\n\n  var _React$useState11 = React.useState({\n    visible: false,\n    title: '',\n    message: '',\n    actionMessage: ''\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      dialog = _React$useState12[0],\n      setDialog = _React$useState12[1];\n\n  React.useEffect(function () {\n    getLastFive();\n    getNextWatering();\n    timer = setInterval(function () {\n      return getNextWatering();\n    }, 10000);\n    return function () {\n      clearInterval(timer);\n    };\n  }, []);\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    console.warn(\"A date has been picked: \", date);\n    setFormContents(_objectSpread(_objectSpread({}, formContents), {}, {\n      date: date\n    }));\n    hideDatePicker();\n  };\n\n  function getLastFive() {\n    var url = API_ENDPOINT + '/watering/recent';\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log('response is ', responseJson);\n    });\n  }\n\n  function getNextWatering() {\n    var timestamp = Math.floor(new Date().getTime() / 1000);\n    console.log('time now is ', timestamp);\n    var url = API_ENDPOINT + '/get-next-watering?timestamp=' + timestamp;\n    console.log('url is ', url);\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log('response is ', responseJson);\n      handleNewWateringDate(responseJson.timestamp);\n    });\n  }\n\n  var handleNewWateringDate = function handleNewWateringDate(timestamp) {\n    console.log('date is ', new Date(timestamp * 1000));\n    setNextWateringTime(new Date(timestamp * 1000));\n  };\n\n  var getFormattedWateringTime = function getFormattedWateringTime() {\n    var d = nextWateringTime;\n    return monthNames[d.getMonth()] + ' ' + d.getDate() + nth(d.getDate()) + ', ' + d.getFullYear() + ' at ' + formatAMPM(d);\n  };\n\n  var getFormattedDate = function getFormattedDate(d) {\n    return monthNames[d.getMonth()] + ' ' + d.getDate() + nth(d.getDate()) + ', ' + d.getFullYear() + ' at ' + formatAMPM(d);\n  };\n\n  var nth = function nth(d) {\n    if (d > 3 && d < 21) return 'th';\n\n    switch (d % 10) {\n      case 1:\n        return \"st\";\n\n      case 2:\n        return \"nd\";\n\n      case 3:\n        return \"rd\";\n\n      default:\n        return \"th\";\n    }\n  };\n\n  var handleModifySchedule = function handleModifySchedule() {\n    setModificationState(!modificationState);\n  };\n\n  var updateSchedule = function updateSchedule() {\n    if (!isNumber.test(formContents.frequencyNumber)) {\n      return;\n    }\n\n    var start = Math.floor(formContents.date.getTime() / 1000);\n    var period = parseInt(formContents.frequencyNumber) * 24 * 60 * 60;\n    fetch(API_ENDPOINT + '/schedule', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        startTimestamp: start,\n        period: period\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log('post request response is ', responseJson);\n      getNextWatering();\n      setModificationState(false);\n\n      if ('resultCode' in responseJson && responseJson.resultCode === 200) {\n        setDialog({\n          title: '✅ Success',\n          message: 'Successfully updated the watering schedule.',\n          actionMessage: 'OK',\n          visible: true\n        });\n      } else {\n        setDialog({\n          title: '❌ Error',\n          message: 'Something went wrong, please try again.',\n          actionMessage: 'OK',\n          visible: true\n        });\n      }\n    });\n  };\n\n  var hideDialog = function hideDialog() {\n    return setDialog(_objectSpread(_objectSpread({}, dialog), {}, {\n      visible: false\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(Surface, {\n    style: styles.surface,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, !modificationState ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, React.createElement(Headline, {\n    style: styles.headline1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"Watering Schedule\"), React.createElement(IconButton, {\n    icon: \"calendar-edit\",\n    color: colors.accent,\n    onPress: function onPress() {\n      return handleModifySchedule();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      flexWrap: 'wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, React.createElement(List.Icon, {\n    icon: \"clock\",\n    style: styles.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }), React.createElement(Subheading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, \"Next is on \", getFormattedWateringTime())), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      flexWrap: 'wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"Last five pumps\"))) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, React.createElement(IconButton, {\n    icon: \"keyboard-backspace\",\n    color: colors.accent,\n    onPress: function onPress() {\n      return handleModifySchedule();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }), React.createElement(Headline, {\n    style: styles.headline1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }, \"Modify Watering Schedule\")), React.createElement(Subheading, {\n    style: styles.buttonLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, \"When to do the first watering?\"), React.createElement(Paragraph, {\n    style: styles.bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, getFormattedDate(formContents.date)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, React.createElement(Button, {\n    icon: \"calendar\",\n    mode: \"contained\",\n    dark: true,\n    color: colors.accent,\n    onPress: function onPress() {\n      return showDatePicker();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, \"First Watering Date\"), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"datetime\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  })), React.createElement(Divider, {\n    style: styles.dividerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'baseline'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, React.createElement(Subheading, {\n    style: styles.buttonLabel1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, \"How often?\"), React.createElement(Paragraph, {\n    style: styles.italic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, \"(In days)\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    style: styles.daysInput,\n    label: \"Days\",\n    mode: \"outlined\",\n    error: !isNumber.test(formContents.frequencyNumber),\n    value: formContents.frequencyNumber,\n    onChangeText: function onChangeText(text) {\n      return setFormContents(_objectSpread(_objectSpread({}, formContents), {}, {\n        frequencyNumber: text\n      }));\n    },\n    theme: {\n      colors: {\n        primary: colors.accent\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  })), !isNumber.test(formContents.frequencyNumber) && React.createElement(Paragraph, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, \"Frequency must be a number.\"), React.createElement(Button, {\n    style: styles.updateButton,\n    icon: \"calendar-edit\",\n    mode: \"contained\",\n    dark: true,\n    color: colors.primary,\n    disabled: !isNumber.test(formContents.frequencyNumber),\n    onPress: function onPress() {\n      return updateSchedule();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, \"Update\")), React.createElement(Portal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, React.createElement(Dialog, {\n    visible: dialog.visible,\n    onDismiss: hideDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, React.createElement(Dialog.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, dialog.title), React.createElement(Dialog.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, React.createElement(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, dialog.message)), React.createElement(Dialog.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    onPress: hideDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, dialog.actionMessage))))));\n};\n\nexport default WateringSchedule;","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/src/components/WateringSchedule/WateringSchedule.component.tsx"],"names":["React","Headline","Surface","Button","Paragraph","IconButton","useTheme","Divider","Subheading","List","TextInput","Dialog","Portal","styles","formatAMPM","DateTimePickerModal","API_ENDPOINT","WateringSchedule","props","colors","useState","Date","nextWateringTime","setNextWateringTime","modificationState","setModificationState","id","notes","success","time_posted","lastFiveWatering","setlastFiveWatering","monthNames","isNumber","frequencyOptions","value","timer","isDatePickerVisible","setDatePickerVisibility","frequencyNumber","date","formContents","setFormContents","visible","title","message","actionMessage","dialog","setDialog","useEffect","getLastFive","getNextWatering","setInterval","clearInterval","showDatePicker","hideDatePicker","handleConfirm","console","warn","url","fetch","then","response","json","responseJson","log","timestamp","Math","floor","getTime","handleNewWateringDate","getFormattedWateringTime","d","getMonth","getDate","nth","getFullYear","getFormattedDate","handleModifySchedule","updateSchedule","test","start","period","parseInt","method","headers","Accept","body","JSON","stringify","startTimestamp","resultCode","hideDialog","surface","flexDirection","justifyContent","alignItems","headline1","accent","flex","flexWrap","icon","buttonLabel","bold","dividerStyle","buttonLabel1","italic","daysInput","text","primary","errorMessage","updateButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Headline,\r\n    Surface,\r\n    Button,\r\n    Paragraph,\r\n    IconButton,\r\n    useTheme,\r\n    Divider,\r\n    Subheading,\r\n    List,\r\n    TextInput,\r\n    Dialog, Portal\r\n} from 'react-native-paper';\r\nimport styles from './WateringSchedule.styles';\r\nimport {View, Text} from \"react-native\";\r\nimport {formatAMPM} from \"../Dashboard/Dashboard.component\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n// @ts-ignore\r\nimport {Dropdown} from 'react-native-material-dropdown';\r\nimport {Textfield, MKColor} from 'react-native-material-kit';\r\n\r\nconst API_ENDPOINT = 'http://ec2-52-14-234-1.us-east-2.compute.amazonaws.com';\r\n\r\nconst WateringSchedule = (props: any) => {\r\n    const {colors} = useTheme();\r\n    const [nextWateringTime, setNextWateringTime] = React.useState(new Date());\r\n    const [modificationState, setModificationState] = React.useState(false);\r\n    const [lastFiveWatering, setlastFiveWatering] = React.useState({\r\n        id: 0,\r\n        notes: '',\r\n        success: false,\r\n        time_posted: ''\r\n    });\r\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n    ];\r\n    const isNumber = /^\\d+$/;\r\n    const frequencyOptions = [{\r\n        value: 'Day',\r\n    }, {\r\n        value: 'Week',\r\n    }, {\r\n        value: 'Month',\r\n    }];\r\n    let timer: any;\r\n    const [isDatePickerVisible, setDatePickerVisibility] = React.useState(false);\r\n    const [formContents, setFormContents] = React.useState({\r\n        frequencyNumber: '1',\r\n        date: new Date()\r\n    });\r\n    const [dialog, setDialog] = React.useState({\r\n        visible: false,\r\n        title: '',\r\n        message: '',\r\n        actionMessage: ''\r\n    });\r\n    React.useEffect(() => {\r\n        getLastFive();\r\n        getNextWatering();\r\n        // returned function will be called on component unmount\r\n        timer = setInterval(\r\n            () => getNextWatering(), // call updated latest 5 posts every 5 seconds\r\n            10000\r\n        );\r\n        return () => {\r\n            clearInterval(timer);\r\n        }\r\n    }, []);\r\n    const showDatePicker = () => {\r\n        setDatePickerVisibility(true);\r\n    };\r\n    const hideDatePicker = () => {\r\n        setDatePickerVisibility(false);\r\n    };\r\n    const handleConfirm = (date: Date) => {\r\n        console.warn(\"A date has been picked: \", date);\r\n        setFormContents({...formContents, date: date});\r\n        hideDatePicker();\r\n    };\r\n\r\n    function getLastFive() {\r\n        let url = API_ENDPOINT + '/watering/recent'\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                console.log('response is ', responseJson);\r\n                //setlastFiveWatering(responseJson);\r\n            });\r\n    }\r\n\r\n    function getNextWatering() {\r\n        let timestamp = Math.floor(new Date().getTime() / 1000);\r\n        console.log('time now is ', timestamp);\r\n        let url = API_ENDPOINT + '/get-next-watering?timestamp=' + timestamp;\r\n        console.log('url is ', url)\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                console.log('response is ', responseJson);\r\n                handleNewWateringDate(responseJson.timestamp);\r\n            });\r\n    }\r\n\r\n    const handleNewWateringDate = (timestamp: number) => {\r\n        console.log('date is ', new Date(timestamp * 1000));\r\n        setNextWateringTime(new Date(timestamp * 1000));\r\n    };\r\n    const getFormattedWateringTime = () => {\r\n        let d = nextWateringTime;\r\n        return monthNames[d.getMonth()] + ' ' + d.getDate() + nth(d.getDate()) +\r\n            ', ' + d.getFullYear() + ' at ' + formatAMPM(d);\r\n    };\r\n    const getFormattedDate = (d: Date) => {\r\n        return monthNames[d.getMonth()] + ' ' + d.getDate() + nth(d.getDate()) +\r\n            ', ' + d.getFullYear() + ' at ' + formatAMPM(d);\r\n    };\r\n    const nth = function (d: number) {\r\n        if (d > 3 && d < 21) return 'th';\r\n        switch (d % 10) {\r\n            case 1:\r\n                return \"st\";\r\n            case 2:\r\n                return \"nd\";\r\n            case 3:\r\n                return \"rd\";\r\n            default:\r\n                return \"th\";\r\n        }\r\n    };\r\n    const handleModifySchedule = () => {\r\n        setModificationState(!modificationState);\r\n    };\r\n\r\n    const updateSchedule = () => {\r\n        if (!isNumber.test(formContents.frequencyNumber)) {\r\n            return;\r\n        }\r\n        let start = Math.floor(formContents.date.getTime()/1000);\r\n        let period = parseInt(formContents.frequencyNumber)*24/*hours*/*60/*minutes*/*60/*seconds*/;\r\n        fetch(API_ENDPOINT + '/schedule', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                startTimestamp: start,\r\n                period: period\r\n            })\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                console.log('post request response is ', responseJson);\r\n                getNextWatering();\r\n                setModificationState(false);\r\n                if ('resultCode' in responseJson && responseJson.resultCode === 200) {\r\n                    setDialog({\r\n                        title: '✅ Success',\r\n                        message: 'Successfully updated the watering schedule.',\r\n                        actionMessage: 'OK',\r\n                        visible: true\r\n                    })\r\n                } else {\r\n                    setDialog({\r\n                        title: '❌ Error',\r\n                        message: 'Something went wrong, please try again.',\r\n                        actionMessage: 'OK',\r\n                        visible: true\r\n                    })\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const hideDialog = () => setDialog({ ...dialog, visible: false });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Surface style={styles.surface}>\r\n                {\r\n                    !modificationState ?\r\n                        <React.Fragment>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                                <Headline style={styles.headline1}>Watering Schedule</Headline>\r\n                                <IconButton\r\n                                    icon=\"calendar-edit\"\r\n                                    color={colors.accent}\r\n                                    onPress={() => handleModifySchedule()}\r\n                                />\r\n                            </View>\r\n                            <View style={{flexDirection: 'row', alignItems: 'center', flex: 1, flexWrap: 'wrap'}}>\r\n                                <List.Icon icon=\"clock\" style={styles.icon}/>\r\n                                <Subheading>Next is on {getFormattedWateringTime()}</Subheading>\r\n                            </View>\r\n                            <View style={{flexDirection: 'row', alignItems: 'center', flex: 1, flexWrap: 'wrap'}}>\r\n                            <Text >Last five pumps</Text>\r\n                                {\r\n                                }                                \r\n                            </View>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                                <IconButton\r\n                                    icon=\"keyboard-backspace\"\r\n                                    color={colors.accent}\r\n                                    onPress={() => handleModifySchedule()}\r\n                                />\r\n                                <Headline style={styles.headline1}>Modify Watering Schedule</Headline>\r\n                            </View>\r\n                            <Subheading style={styles.buttonLabel}>When to do the first watering?</Subheading>\r\n                            <Paragraph style={styles.bold}>{getFormattedDate(formContents.date)}</Paragraph>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'space-around',}}>\r\n                                <Button icon=\"calendar\" mode=\"contained\" dark color={colors.accent}\r\n                                        onPress={() => showDatePicker()}>\r\n                                    First Watering Date\r\n                                </Button>\r\n                                <DateTimePickerModal\r\n                                    isVisible={isDatePickerVisible}\r\n                                    mode=\"datetime\"\r\n                                    onConfirm={handleConfirm}\r\n                                    onCancel={hideDatePicker}\r\n                                />\r\n                            </View>\r\n                            <Divider style={styles.dividerStyle}/>\r\n                            <View style={{flexDirection: 'row', alignItems: 'baseline'}}>\r\n                                <Subheading style={styles.buttonLabel1}>How often?</Subheading>\r\n                                <Paragraph style={styles.italic}>(In days)</Paragraph>\r\n                            </View>\r\n                            <View style={{flexDirection: 'row', justifyContent: 'space-around'}}>\r\n                                <TextInput\r\n                                    style={styles.daysInput}\r\n                                    label='Days'\r\n                                    mode='outlined'\r\n                                    error={!(isNumber.test(formContents.frequencyNumber))}\r\n                                    value={formContents.frequencyNumber}\r\n                                    onChangeText={text => setFormContents({...formContents, frequencyNumber: text})}\r\n                                    theme={{\r\n                                        colors: {\r\n                                            primary: colors.accent,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                            {\r\n                                !isNumber.test(formContents.frequencyNumber) &&\r\n                                    <Paragraph style={styles.errorMessage}>Frequency must be a number.</Paragraph>\r\n                            }\r\n                            <Button style={styles.updateButton} icon=\"calendar-edit\" mode=\"contained\" dark color={colors.primary}\r\n                                    disabled={!isNumber.test(formContents.frequencyNumber)}\r\n                                    onPress={() => updateSchedule()}>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </React.Fragment>\r\n                }\r\n                <Portal>\r\n                    <Dialog\r\n                        visible={dialog.visible}\r\n                        onDismiss={hideDialog}>\r\n                        <Dialog.Title>{dialog.title}</Dialog.Title>\r\n                        <Dialog.Content>\r\n                            <Paragraph>{dialog.message}</Paragraph>\r\n                        </Dialog.Content>\r\n                        <Dialog.Actions>\r\n                            <Button onPress={hideDialog}>{dialog.actionMessage}</Button>\r\n                        </Dialog.Actions>\r\n                    </Dialog>\r\n                </Portal>\r\n            </Surface>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default WateringSchedule;\r\n"]},"metadata":{},"sourceType":"module"}