{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\node_modules\\\\react-native-chart-kit\\\\src\\\\bar-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, Rect, G, Text } from \"react-native-svg\";\nimport AbstractChart from \"./abstract-chart\";\nvar barWidth = 32;\n\nvar BarChart = function (_AbstractChart) {\n  _inherits(BarChart, _AbstractChart);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart() {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getBarPercentage = function () {\n      var _this$props$chartConf = _this.props.chartConfig.barPercentage,\n          barPercentage = _this$props$chartConf === void 0 ? 1 : _this$props$chartConf;\n      return barPercentage;\n    };\n\n    _this.renderBars = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          barRadius = config.barRadius;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return React.createElement(Rect, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4 * 3 + paddingTop,\n          rx: barRadius,\n          width: barWidth,\n          height: Math.abs(barHeight) / 4 * 3,\n          fill: \"url(#fillShadowGradient)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    _this.renderBarTops = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return React.createElement(Rect, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (baseHeight - barHeight) / 4 * 3 + paddingTop,\n          width: barWidth,\n          height: 2,\n          fill: _this.props.chartConfig.color(0.6),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    _this.renderValuesOnTopOfBars = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return React.createElement(Text, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 1,\n          y: (baseHeight - barHeight) / 4 * 3 + paddingTop - 1,\n          fill: _this.props.chartConfig.color(0.6),\n          fontSize: \"12\",\n          textAnchor: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }\n        }, data[i]);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"render\",\n    value: function render() {\n      var _ref;\n\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height,\n          data = _this$props.data,\n          _this$props$style = _this$props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style,\n          _this$props$withHoriz = _this$props.withHorizontalLabels,\n          withHorizontalLabels = _this$props$withHoriz === void 0 ? true : _this$props$withHoriz,\n          _this$props$withVerti = _this$props.withVerticalLabels,\n          withVerticalLabels = _this$props$withVerti === void 0 ? true : _this$props$withVerti,\n          _this$props$verticalL = _this$props.verticalLabelRotation,\n          verticalLabelRotation = _this$props$verticalL === void 0 ? 0 : _this$props$verticalL,\n          _this$props$horizonta = _this$props.horizontalLabelRotation,\n          horizontalLabelRotation = _this$props$horizonta === void 0 ? 0 : _this$props$horizonta,\n          _this$props$withInner = _this$props.withInnerLines,\n          withInnerLines = _this$props$withInner === void 0 ? true : _this$props$withInner,\n          _this$props$showBarTo = _this$props.showBarTops,\n          showBarTops = _this$props$showBarTo === void 0 ? true : _this$props$showBarTo,\n          _this$props$showValue = _this$props.showValuesOnTopOfBars,\n          showValuesOnTopOfBars = _this$props$showValue === void 0 ? false : _this$props$showValue,\n          _this$props$segments = _this$props.segments,\n          segments = _this$props$segments === void 0 ? 4 : _this$props$segments;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius,\n          _style$paddingTop = style.paddingTop,\n          paddingTop = _style$paddingTop === void 0 ? 16 : _style$paddingTop,\n          _style$paddingRight = style.paddingRight,\n          paddingRight = _style$paddingRight === void 0 ? 64 : _style$paddingRight;\n      var config = {\n        width: width,\n        height: height,\n        verticalLabelRotation: verticalLabelRotation,\n        horizontalLabelRotation: horizontalLabelRotation,\n        barRadius: this.props.chartConfig && this.props.chartConfig.barRadius || 0,\n        decimalPlaces: (_ref = this.props.chartConfig && this.props.chartConfig.decimalPlaces) != null ? _ref : 2,\n        formatYLabel: this.props.chartConfig && this.props.chartConfig.formatYLabel || function (label) {\n          return label;\n        },\n        formatXLabel: this.props.chartConfig && this.props.chartConfig.formatXLabel || function (label) {\n          return label;\n        }\n      };\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, React.createElement(Svg, {\n        height: height,\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, this.renderDefs(_objectSpread(_objectSpread({}, config), this.props.chartConfig)), React.createElement(Rect, {\n        width: \"100%\",\n        height: height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, withInnerLines ? this.renderHorizontalLines(_objectSpread(_objectSpread({}, config), {}, {\n        count: segments,\n        paddingTop: paddingTop\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, withHorizontalLabels ? this.renderHorizontalLabels(_objectSpread(_objectSpread({}, config), {}, {\n        count: segments,\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, withVerticalLabels ? this.renderVerticalLabels(_objectSpread(_objectSpread({}, config), {}, {\n        labels: data.labels,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        horizontalOffset: barWidth * this.getBarPercentage()\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, this.renderBars(_objectSpread(_objectSpread({}, config), {}, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, showValuesOnTopOfBars && this.renderValuesOnTopOfBars(_objectSpread(_objectSpread({}, config), {}, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, showBarTops && this.renderBarTops(_objectSpread(_objectSpread({}, config), {}, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })))));\n    }\n  }]);\n\n  return BarChart;\n}(AbstractChart);\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-chart-kit/src/bar-chart.js"],"names":["React","Svg","Rect","G","Text","AbstractChart","barWidth","BarChart","getBarPercentage","props","chartConfig","barPercentage","renderBars","config","data","width","height","paddingTop","paddingRight","barRadius","baseHeight","calcBaseHeight","map","x","i","barHeight","calcHeight","Math","random","length","abs","renderBarTops","color","renderValuesOnTopOfBars","style","withHorizontalLabels","withVerticalLabels","verticalLabelRotation","horizontalLabelRotation","withInnerLines","showBarTops","showValuesOnTopOfBars","segments","borderRadius","decimalPlaces","formatYLabel","label","formatXLabel","renderDefs","renderHorizontalLines","count","renderHorizontalLabels","datasets","renderVerticalLabels","labels","horizontalOffset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport { Svg, Rect, G, Text } from \"react-native-svg\";\nimport AbstractChart from \"./abstract-chart\";\n\nconst barWidth = 32;\n\nclass BarChart extends AbstractChart {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  renderBars = config => {\n    const { data, width, height, paddingTop, paddingRight, barRadius } = config;\n    const baseHeight = this.calcBaseHeight(data, height);\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={\n            ((barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4) * 3 +\n            paddingTop\n          }\n          rx={barRadius}\n          width={barWidth}\n          height={(Math.abs(barHeight) / 4) * 3}\n          fill=\"url(#fillShadowGradient)\"\n        />\n      );\n    });\n  };\n\n  renderBarTops = config => {\n    const { data, width, height, paddingTop, paddingRight } = config;\n    const baseHeight = this.calcBaseHeight(data, height);\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop}\n          width={barWidth}\n          height={2}\n          fill={this.props.chartConfig.color(0.6)}\n        />\n      );\n    });\n  };\n\n  renderValuesOnTopOfBars = config => {\n    const { data, width, height, paddingTop, paddingRight } = config;\n    const baseHeight = this.calcBaseHeight(data, height);\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Text\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 1\n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop - 1}\n          fill={this.props.chartConfig.color(0.6)}\n          fontSize=\"12\"\n          textAnchor=\"middle\"\n        >\n          {data[i]}\n        </Text>\n      );\n    });\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      data,\n      style = {},\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      verticalLabelRotation = 0,\n      horizontalLabelRotation = 0,\n      withInnerLines = true,\n      showBarTops = true,\n      showValuesOnTopOfBars = false,\n      segments = 4\n    } = this.props;\n    const { borderRadius = 0, paddingTop = 16, paddingRight = 64 } = style;\n    const config = {\n      width,\n      height,\n      verticalLabelRotation,\n      horizontalLabelRotation,\n      barRadius:\n        (this.props.chartConfig && this.props.chartConfig.barRadius) || 0,\n      decimalPlaces:\n        (this.props.chartConfig && this.props.chartConfig.decimalPlaces) ?? 2,\n      formatYLabel:\n        (this.props.chartConfig && this.props.chartConfig.formatYLabel) ||\n        function(label) {\n          return label;\n        },\n      formatXLabel:\n        (this.props.chartConfig && this.props.chartConfig.formatXLabel) ||\n        function(label) {\n          return label;\n        }\n    };\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {withInnerLines\n              ? this.renderHorizontalLines({\n                  ...config,\n                  count: segments,\n                  paddingTop\n                })\n              : null}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                  ...config,\n                  count: segments,\n                  data: data.datasets[0].data,\n                  paddingTop,\n                  paddingRight\n                })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                  ...config,\n                  labels: data.labels,\n                  paddingRight,\n                  paddingTop,\n                  horizontalOffset: barWidth * this.getBarPercentage()\n                })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.datasets[0].data,\n              paddingTop,\n              paddingRight\n            })}\n          </G>\n          <G>\n            {showValuesOnTopOfBars &&\n              this.renderValuesOnTopOfBars({\n                ...config,\n                data: data.datasets[0].data,\n                paddingTop,\n                paddingRight\n              })}\n          </G>\n          <G>\n            {showBarTops &&\n              this.renderBarTops({\n                ...config,\n                data: data.datasets[0].data,\n                paddingTop,\n                paddingRight\n              })}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}