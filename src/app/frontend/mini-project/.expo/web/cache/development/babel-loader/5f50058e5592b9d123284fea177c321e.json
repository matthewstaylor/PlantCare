{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\internal\\\\textfield\\\\FloatingLabel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport MKColor from \"../../MKColor\";\nvar defaultProps = {\n  floatingLabelEnabled: true,\n  floatingLabelAniDuration: 200,\n  opacityAniDur: 0\n};\n\nvar FloatingLabel = function (_Component) {\n  _inherits(FloatingLabel, _Component);\n\n  var _super = _createSuper(FloatingLabel);\n\n  function FloatingLabel(props) {\n    var _this;\n\n    _classCallCheck(this, FloatingLabel);\n\n    _this = _super.call(this, props);\n    _this.offsetX = 0;\n    _this.placeholderHeight = 0;\n    _this.labelRef = createRef();\n\n    _this._onLabelLayout = function (_ref) {\n      var layout = _ref.nativeEvent.layout;\n      var x = layout.x,\n          width = layout.width,\n          height = layout.height;\n\n      if (width && !_this.offsetX) {\n        _this.offsetX = -1 * (width - width * 0.8) / 2 - x;\n      }\n\n      if (height && !_this.placeholderHeight) {\n        _this.placeholderHeight = height;\n      }\n\n      if (width !== _this.labelDim.width || height !== _this.labelDim.height) {\n        _this.labelDim = {\n          width: width,\n          height: height\n        };\n      }\n    };\n\n    _this.labelDim = {\n      width: 0,\n      height: 0\n    };\n    _this.state = {\n      progress: new Animated.Value(1),\n      opacity: new Animated.Value(0),\n      label: ''\n    };\n    return _this;\n  }\n\n  _createClass(FloatingLabel, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.updateLabel(this.props.label);\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.updateLabel(nextProps.label);\n    }\n  }, {\n    key: \"updateLabel\",\n    value: function updateLabel(label) {\n      this.setState({\n        label: label || ''\n      });\n    }\n  }, {\n    key: \"measure\",\n    value: function measure(cb) {\n      if (this.labelRef.current) {\n        var handle = findNodeHandle(this.labelRef.current);\n        handle && UIManager.measure(handle, cb);\n      }\n    }\n  }, {\n    key: \"aniFloatLabel\",\n    value: function aniFloatLabel() {\n      return this.props.floatingLabelEnabled ? [Animated.sequence([Animated.timing(this.state.opacity, {\n        toValue: 1,\n        duration: this.props.opacityAniDur\n      }), Animated.timing(this.state.progress, {\n        toValue: 0,\n        duration: this.props.floatingLabelAniDuration\n      })])] : [];\n    }\n  }, {\n    key: \"aniSinkLabel\",\n    value: function aniSinkLabel() {\n      return this.props.floatingLabelEnabled ? [Animated.sequence([Animated.timing(this.state.progress, {\n        toValue: 1,\n        duration: this.props.floatingLabelAniDuration\n      }), Animated.timing(this.state.opacity, {\n        toValue: 0,\n        duration: this.props.opacityAniDur\n      })])] : [];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var labelColor = this.state.progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [this.props.highlightColor, this.props.tint]\n      });\n      var labelScale = this.state.progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0.8, 1]\n      });\n      var labelY = this.state.progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, this.placeholderHeight]\n      });\n      var labelX = this.state.progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [this.offsetX, 0]\n      });\n      return React.createElement(Animated.Text, {\n        ref: this.labelRef,\n        pointerEvents: \"none\",\n        allowFontScaling: this.props.allowFontScaling,\n        style: [{\n          backgroundColor: MKColor.Transparent,\n          position: 'absolute',\n          top: labelY,\n          left: labelX,\n          color: labelColor,\n          opacity: this.state.opacity,\n          fontSize: 16,\n          transform: [{\n            scale: labelScale\n          }],\n          marginBottom: this.props.floatingLabelBottomMargin\n        }, this.props.floatingLabelFont],\n        onLayout: this._onLabelLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, this.state.label);\n    }\n  }]);\n\n  return FloatingLabel;\n}(Component);\n\nexport { FloatingLabel as default };\nFloatingLabel.defaultProps = defaultProps;","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/internal/textfield/FloatingLabel.js"],"names":["React","Component","createRef","MKColor","defaultProps","floatingLabelEnabled","floatingLabelAniDuration","opacityAniDur","FloatingLabel","props","offsetX","placeholderHeight","labelRef","_onLabelLayout","layout","nativeEvent","x","width","height","labelDim","state","progress","Animated","Value","opacity","label","updateLabel","nextProps","setState","cb","current","handle","findNodeHandle","UIManager","measure","sequence","timing","toValue","duration","labelColor","interpolate","inputRange","outputRange","highlightColor","tint","labelScale","labelY","labelX","allowFontScaling","backgroundColor","Transparent","position","top","left","color","fontSize","transform","scale","marginBottom","floatingLabelBottomMargin","floatingLabelFont"],"mappings":"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","sourcesContent":["/**\n * `FloatingLabel` component of {@link Textfield}s.\n */\nimport React, { Component, createRef } from 'react';\nimport { Animated, findNodeHandle, UIManager, } from 'react-native';\nimport MKColor from '../../MKColor';\n/** Defaults of {@link FloatingLabelProps} */\nconst defaultProps = {\n    floatingLabelEnabled: true,\n    floatingLabelAniDuration: 200,\n    opacityAniDur: 0,\n};\n/**\n * The `FloatingLabel` component of a {@link Textfield}.\n */\nexport default class FloatingLabel extends Component {\n    constructor(props) {\n        super(props);\n        this.offsetX = 0;\n        this.placeholderHeight = 0;\n        this.labelRef = createRef();\n        this._onLabelLayout = ({ nativeEvent: { layout } }) => {\n            const { x, width, height } = layout;\n            if (width && !this.offsetX) {\n                this.offsetX = (-1 * (width - width * 0.8)) / 2 - x;\n            }\n            if (height && !this.placeholderHeight) {\n                this.placeholderHeight = height;\n            }\n            if (width !== this.labelDim.width || height !== this.labelDim.height) {\n                this.labelDim = { width, height };\n            }\n        };\n        this.labelDim = { width: 0, height: 0 };\n        this.state = {\n            progress: new Animated.Value(1),\n            opacity: new Animated.Value(0),\n            label: '',\n        };\n    }\n    UNSAFE_componentWillMount() {\n        this.updateLabel(this.props.label);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.updateLabel(nextProps.label);\n    }\n    /** Update the label text */\n    updateLabel(label) {\n        this.setState({ label: label || '' });\n    }\n    /**\n     * Determines the location on screen, width, and height of the given view and\n     * returns the values via an async callback.\n     */\n    measure(cb) {\n        if (this.labelRef.current) {\n            const handle = findNodeHandle(this.labelRef.current);\n            handle && UIManager.measure(handle, cb);\n        }\n    }\n    /** Start the floating animation */\n    aniFloatLabel() {\n        return this.props.floatingLabelEnabled\n            ? [\n                Animated.sequence([\n                    Animated.timing(this.state.opacity, {\n                        toValue: 1,\n                        duration: this.props.opacityAniDur,\n                    }),\n                    Animated.timing(this.state.progress, {\n                        toValue: 0,\n                        duration: this.props.floatingLabelAniDuration,\n                    }),\n                ]),\n            ]\n            : [];\n    }\n    /** Start the collapse animation */\n    aniSinkLabel() {\n        return this.props.floatingLabelEnabled\n            ? [\n                Animated.sequence([\n                    Animated.timing(this.state.progress, {\n                        toValue: 1,\n                        duration: this.props.floatingLabelAniDuration,\n                    }),\n                    Animated.timing(this.state.opacity, {\n                        toValue: 0,\n                        duration: this.props.opacityAniDur,\n                    }),\n                ]),\n            ]\n            : [];\n    }\n    render() {\n        const labelColor = this.state.progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.props.highlightColor, this.props.tint],\n        });\n        const labelScale = this.state.progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.8, 1],\n        });\n        const labelY = this.state.progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, this.placeholderHeight],\n        });\n        const labelX = this.state.progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.offsetX, 0],\n        });\n        return (<Animated.Text ref={this.labelRef} pointerEvents=\"none\" allowFontScaling={this.props.allowFontScaling} style={[\n            {\n                backgroundColor: MKColor.Transparent,\n                position: 'absolute',\n                top: labelY,\n                left: labelX,\n                color: labelColor,\n                opacity: this.state.opacity,\n                fontSize: 16,\n                transform: [{ scale: labelScale }],\n                marginBottom: this.props.floatingLabelBottomMargin,\n            },\n            this.props.floatingLabelFont,\n        ]} onLayout={this._onLabelLayout}>\n        {this.state.label}\n      </Animated.Text>);\n    }\n}\n/** Defaults, see {@link defaultProps} */\nFloatingLabel.defaultProps = defaultProps;\n//# sourceMappingURL=FloatingLabel.js.map"]},"metadata":{},"sourceType":"module"}