{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar RadioButtonGroup = function () {\n  function RadioButtonGroup(onAdd, onRemove) {\n    _classCallCheck(this, RadioButtonGroup);\n\n    this.buttons = [];\n    this.onAdd = onAdd;\n    this.onRemove = onRemove;\n  }\n\n  _createClass(RadioButtonGroup, [{\n    key: \"add\",\n    value: function add(btn) {\n      if (this.canAdd(btn) && this.buttons.indexOf(btn) < 0) {\n        this.buttons.push(btn);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(btn) {\n      if (this.canRemove(btn)) {\n        var index = this.buttons.indexOf(btn);\n\n        if (index >= 0) {\n          this.buttons.splice(index, 1);\n        }\n      }\n    }\n  }, {\n    key: \"onChecked\",\n    value: function onChecked(btn, checked) {\n      if (checked) {\n        this.buttons.forEach(function (it) {\n          return it !== btn && it.confirmUncheck();\n        });\n      }\n    }\n  }, {\n    key: \"canAdd\",\n    value: function canAdd(btn) {\n      return !this.onAdd || this.onAdd(btn);\n    }\n  }, {\n    key: \"canRemove\",\n    value: function canRemove(btn) {\n      return !this.onRemove || this.onRemove(btn);\n    }\n  }]);\n\n  return RadioButtonGroup;\n}();\n\nexport { RadioButtonGroup as default };","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/mdl/RadioButtonGroup.js"],"names":["RadioButtonGroup","onAdd","onRemove","buttons","btn","canAdd","indexOf","push","canRemove","index","splice","checked","forEach","it","confirmUncheck"],"mappings":";;;IAGqBA,gB;AACjB,4BAAYC,KAAZ,EAAmBC,QAAnB,EAA6B;AAAA;;AACzB,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;wBACGE,G,EAAK;AACL,UAAI,KAAKC,MAAL,CAAYD,GAAZ,KAAoB,KAAKD,OAAL,CAAaG,OAAb,CAAqBF,GAArB,IAA4B,CAApD,EAAuD;AACnD,aAAKD,OAAL,CAAaI,IAAb,CAAkBH,GAAlB;AACH;AACJ;;;2BACMA,G,EAAK;AACR,UAAI,KAAKI,SAAL,CAAeJ,GAAf,CAAJ,EAAyB;AACrB,YAAMK,KAAK,GAAG,KAAKN,OAAL,CAAaG,OAAb,CAAqBF,GAArB,CAAd;;AACA,YAAIK,KAAK,IAAI,CAAb,EAAgB;AACZ,eAAKN,OAAL,CAAaO,MAAb,CAAoBD,KAApB,EAA2B,CAA3B;AACH;AACJ;AACJ;;;8BACSL,G,EAAKO,O,EAAS;AACpB,UAAIA,OAAJ,EAAa;AACT,aAAKR,OAAL,CAAaS,OAAb,CAAqB,UAAAC,EAAE;AAAA,iBAAIA,EAAE,KAAKT,GAAP,IAAcS,EAAE,CAACC,cAAH,EAAlB;AAAA,SAAvB;AACH;AACJ;;;2BACMV,G,EAAK;AACR,aAAO,CAAC,KAAKH,KAAN,IAAe,KAAKA,KAAL,CAAWG,GAAX,CAAtB;AACH;;;8BACSA,G,EAAK;AACX,aAAO,CAAC,KAAKF,QAAN,IAAkB,KAAKA,QAAL,CAAcE,GAAd,CAAzB;AACH;;;;;;SA7BgBJ,gB","sourcesContent":["/**\n * Managing a group of radio buttons.\n */\nexport default class RadioButtonGroup {\n    constructor(onAdd, onRemove) {\n        this.buttons = [];\n        this.onAdd = onAdd;\n        this.onRemove = onRemove;\n    }\n    add(btn) {\n        if (this.canAdd(btn) && this.buttons.indexOf(btn) < 0) {\n            this.buttons.push(btn);\n        }\n    }\n    remove(btn) {\n        if (this.canRemove(btn)) {\n            const index = this.buttons.indexOf(btn);\n            if (index >= 0) {\n                this.buttons.splice(index, 1);\n            }\n        }\n    }\n    onChecked(btn, checked) {\n        if (checked) {\n            this.buttons.forEach(it => it !== btn && it.confirmUncheck());\n        }\n    }\n    canAdd(btn) {\n        return !this.onAdd || this.onAdd(btn);\n    }\n    canRemove(btn) {\n        return !this.onRemove || this.onRemove(btn);\n    }\n}\n//# sourceMappingURL=RadioButtonGroup.js.map"]},"metadata":{},"sourceType":"module"}