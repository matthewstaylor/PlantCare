{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\internal\\\\Tick.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nvar NativeTick = requireNativeComponent('TickView', Tick);\n\nvar Tick = function (_Component) {\n  _inherits(Tick, _Component);\n\n  var _super = _createSuper(Tick);\n\n  function Tick() {\n    var _this;\n\n    _classCallCheck(this, Tick);\n\n    _this = _super.apply(this, arguments);\n\n    _this.render = function () {\n      return React.createElement(NativeTick, _extends({}, _this.props, {\n        fillColor: processColor(_this.props.fillColor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  return Tick;\n}(Component);\n\nexport { Tick as default };\nexport var AnimatedTick = Animated.createAnimatedComponent(Tick);","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/internal/Tick.js"],"names":["React","Component","requireNativeComponent","NativeTick","Tick","arguments","render","props","processColor","fillColor","AnimatedTick","Animated","createAnimatedComponent"],"mappings":";;;;;;;;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;SACiCC,sB;AAEjC,IAAMC,UAAU,GAAGD,sBAAsB,CAAC,UAAD,EAAaE,IAAb,CAAzC;;IAMqBA,I;;;;;AACjB,kBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;;AACA,UAAKC,MAAL,GAAc;AAAA,aAAM,oBAAC,UAAD,eAAgB,MAAKC,KAArB;AAA4B,QAAA,SAAS,EAAEC,YAAY,CAAC,MAAKD,KAAL,CAAWE,SAAZ,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAN;AAAA,KAAd;;AAFU;AAGb;;;EAJ6BR,S;;SAAbG,I;AAMrB,OAAO,IAAMM,YAAY,GAAGC,QAAQ,CAACC,uBAAT,CAAiCR,IAAjC,CAArB","sourcesContent":["/* eslint react/prefer-stateless-function:0 */\n/**\n * The `Tick` part used in `Checkbox`, for internal use only\n */\nimport React, { Component } from 'react';\nimport { Animated, processColor, requireNativeComponent } from 'react-native';\n// @ts-ignore ComponentInterface requires `propTypes`\nconst NativeTick = requireNativeComponent('TickView', Tick);\n/**\n * Wrap the native `Tick` component, which is used in {@link Checkbox}.\n *\n * Note: `createAnimatedComponent` does not support SFC\n */\nexport default class Tick extends Component {\n    constructor() {\n        super(...arguments);\n        this.render = () => <NativeTick {...this.props} fillColor={processColor(this.props.fillColor)}/>;\n    }\n}\nexport const AnimatedTick = Animated.createAnimatedComponent(Tick);\n//# sourceMappingURL=Tick.js.map"]},"metadata":{},"sourceType":"module"}