{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Projects\\\\ED1-Mini-Project\\\\src\\\\app\\\\frontend\\\\mini-project\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\internal\\\\MKTouchable.js\";\nimport React, { forwardRef } from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { partial } from 'ramda';\nimport { convertCoordinate } from \"../utils\";\nvar MKTouchable = forwardRef(function (props, ref) {\n  return React.createElement(NativeTouchable, _extends({\n    ref: ref\n  }, props, {\n    onChange: partial(onTouch, [props]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 49\n    }\n  }));\n});\n\nfunction onTouch(props, event) {\n  if (props.onTouch) {\n    var evt = event.nativeEvent;\n    evt.x = convertCoordinate(evt.x);\n    evt.y = convertCoordinate(evt.y);\n    props.onTouch(evt);\n  }\n}\n\nvar NativeTouchable = requireNativeComponent('MKTouchable', MKTouchable, {\n  nativeOnly: {\n    nativeBackgroundAndroid: true,\n    nativeForegroundAndroid: true\n  }\n});\nexport default MKTouchable;","map":{"version":3,"sources":["C:/Projects/ED1-Mini-Project/src/app/frontend/mini-project/node_modules/react-native-material-kit/lib/internal/MKTouchable.js"],"names":["React","forwardRef","requireNativeComponent","partial","convertCoordinate","MKTouchable","props","ref","onTouch","event","evt","nativeEvent","x","y","NativeTouchable","nativeOnly","nativeBackgroundAndroid","nativeForegroundAndroid"],"mappings":";;AAKA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;SACSC,sB;AACT,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,iBAAT;AAIA,IAAMC,WAAW,GAAGJ,UAAU,CAAC,UAACK,KAAD,EAAQC,GAAR;AAAA,SAAiB,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEA;AAAtB,KAA+BD,KAA/B;AAAsC,IAAA,QAAQ,EAAEH,OAAO,CAACK,OAAD,EAAU,CAACF,KAAD,CAAV,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;AAAA,CAAD,CAA9B;;AAEA,SAASE,OAAT,CAAiBF,KAAjB,EAAwBG,KAAxB,EAA+B;AAC3B,MAAIH,KAAK,CAACE,OAAV,EAAmB;AACf,QAAME,GAAG,GAAGD,KAAK,CAACE,WAAlB;AACAD,IAAAA,GAAG,CAACE,CAAJ,GAAQR,iBAAiB,CAACM,GAAG,CAACE,CAAL,CAAzB;AACAF,IAAAA,GAAG,CAACG,CAAJ,GAAQT,iBAAiB,CAACM,GAAG,CAACG,CAAL,CAAzB;AACAP,IAAAA,KAAK,CAACE,OAAN,CAAcE,GAAd;AACH;AACJ;;AAED,IAAMI,eAAe,GAAGZ,sBAAsB,CAAC,aAAD,EAAgBG,WAAhB,EAA6B;AACvEU,EAAAA,UAAU,EAAE;AACRC,IAAAA,uBAAuB,EAAE,IADjB;AAERC,IAAAA,uBAAuB,EAAE;AAFjB;AAD2D,CAA7B,CAA9C;AAOA,eAAeZ,WAAf","sourcesContent":["/**\n *  Touchable view, for listening to touch events, but not intercept them.\n *\n *  Created by ywu on 15/9/22.\n */\nimport React, { forwardRef } from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport { partial } from 'ramda';\nimport { convertCoordinate } from '../utils';\n/**\n * Wrap the native component `MKTouchable`.\n */\nconst MKTouchable = forwardRef((props, ref) => (<NativeTouchable ref={ref} {...props} onChange={partial(onTouch, [props])}/>));\n/** Touch event handler */\nfunction onTouch(props, event) {\n    if (props.onTouch) {\n        const evt = event.nativeEvent;\n        evt.x = convertCoordinate(evt.x);\n        evt.y = convertCoordinate(evt.y);\n        props.onTouch(evt);\n    }\n}\n// @ts-ignore ComponentInterface requires `propTypes`\nconst NativeTouchable = requireNativeComponent('MKTouchable', MKTouchable, {\n    nativeOnly: {\n        nativeBackgroundAndroid: true,\n        nativeForegroundAndroid: true,\n    },\n});\n// ## Public interface\nexport default MKTouchable;\n//# sourceMappingURL=MKTouchable.js.map"]},"metadata":{},"sourceType":"module"}